$ bunx svelte-kit sync && bunx svelte-check --tsconfig ./tsconfig.json
Loading svelte-check in workspace: /Users/robert/Projects/JS/SvelteKit/budget/apps/budget
Getting Svelte diagnostics...

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/trpc-server.ts:81:9
Error: Object literal may only specify known properties, and 'query' does not exist in type 'Request'. 
        headers: request.headers,
        query: event.url.searchParams,
        body: request.body,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/trpc-server.ts:119:9
Error: No overload matches this call.
  Overload 1 of 2, '(opts: Omit<ResolveHTTPRequestOptions<Router, HTTPRequest>, "unstable_onChunk" | "unstable_onHead">): Promise<HTTPResponse>', gave the following error.
    Property 'query' is missing in type 'Request' but required in type 'HTTPRequest'.
  Overload 2 of 2, '(opts: ResolveHTTPRequestOptions<Router, HTTPRequest>): Promise<void>', gave the following error.
    Property 'query' is missing in type 'Request' but required in type 'HTTPRequest'. 
        router,
        req,
        path: event.url.pathname.substring(url.length + 1),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/trpc-server.ts:131:49
Error: No overload matches this call.
  Overload 1 of 2, '(o: { [s: string]: string | string[] | undefined; } | ArrayLike<string | string[] | undefined>): [string, string | string[] | undefined][]', gave the following error.
    Argument of type 'HTTPHeaders | undefined' is not assignable to parameter of type '{ [s: string]: string | string[] | undefined; } | ArrayLike<string | string[] | undefined>'.
      Type 'undefined' is not assignable to type '{ [s: string]: string | string[] | undefined; } | ArrayLike<string | string[] | undefined>'.
  Overload 2 of 2, '(o: {}): [string, any][]', gave the following error.
    Argument of type 'HTTPHeaders | undefined' is not assignable to parameter of type '{}'.
      Type 'undefined' is not assignable to type '{}'. 

      for (const [key, value] of Object.entries(headers)) {
        finalHeaders.set(key, value);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/trpc-server.ts:132:31
Error: Argument of type 'string | string[] | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
      for (const [key, value] of Object.entries(headers)) {
        finalHeaders.set(key, value);
      }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/performance.ts:164:21
Error: Property 'lcp' comes from an index signature, so it must be accessed with ['lcp']. 
        const lastEntry = entries[entries.length - 1];
        this.vitals.lcp = lastEntry.startTime;
        perfMonitor.recordMetric('web-vitals.lcp', lastEntry.startTime);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/performance.ts:164:27
Error: 'lastEntry' is possibly 'undefined'. 
        const lastEntry = entries[entries.length - 1];
        this.vitals.lcp = lastEntry.startTime;
        perfMonitor.recordMetric('web-vitals.lcp', lastEntry.startTime);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/performance.ts:165:52
Error: 'lastEntry' is possibly 'undefined'. 
        this.vitals.lcp = lastEntry.startTime;
        perfMonitor.recordMetric('web-vitals.lcp', lastEntry.startTime);
      }).observe({ type: 'largest-contentful-paint', buffered: true });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/performance.ts:172:23
Error: Property 'fid' comes from an index signature, so it must be accessed with ['fid']. 
        entries.forEach((entry: any) => {
          this.vitals.fid = entry.processingStart - entry.startTime;
          perfMonitor.recordMetric('web-vitals.fid', entry.processingStart - entry.startTime);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/performance.ts:186:21
Error: Property 'cls' comes from an index signature, so it must be accessed with ['cls']. 
        });
        this.vitals.cls = clsValue;
        perfMonitor.recordMetric('web-vitals.cls', clsValue);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/accounts-server.ts:62:20
Error: 'balanceResult' is possibly 'undefined'. 
          ...account,
          balance: balanceResult.balance,
          transactionCount: balanceResult.transactionCount,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/accounts-server.ts:63:29
Error: 'balanceResult' is possibly 'undefined'. 
          balance: balanceResult.balance,
          transactionCount: balanceResult.transactionCount,
        };

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/accounts-server.ts:184:28
Error: 'countResult' is possibly 'undefined'. 

        const totalCount = countResult.count;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/views.ts:72:13
Error: Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; } | null | undefined' is not assignable to type 'ViewDisplayState | SQLiteColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | SQL<unknown> | null | undefined'.
  Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; }' is not assignable to type 'ViewDisplayState | SQLiteColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | SQL<unknown> | null | undefined'.
    Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; }' is not assignable to type 'ViewDisplayState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Types of property 'grouping' are incompatible.
        Type 'string[] | undefined' is not assignable to type 'GroupingState'.
          Type 'undefined' is not assignable to type 'string[]'. 
            filters,
            display: transformedDisplay,
            dirty,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/views.ts:80:12
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; } | null | undefined' is not assignable to type 'ViewDisplayState | SQL<unknown> | Placeholder<string, any> | null | undefined'.
      Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; }' is not assignable to type 'ViewDisplayState | SQL<unknown> | Placeholder<string, any> | null | undefined'.
        Type '{ expanded: Record<string, boolean>; visibility: Record<string, boolean>; grouping?: string[] | undefined; sort?: { desc: boolean; id: string; }[] | undefined; }' is not assignable to type 'ViewDisplayState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
          Types of property 'grouping' are incompatible.
            Type 'string[] | undefined' is not assignable to type 'GroupingState'.
              Type 'undefined' is not assignable to type 'string[]'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplaySta...'. 
          .insert(views)
          .values({
            name,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/index.ts:252:56
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'PropertyKey'.
  Type 'undefined' is not assignable to type 'PropertyKey'. 
    for (let index = leftKeys.length; index-- !== 0; ) {
      if (!Object.prototype.hasOwnProperty.call(right, leftKeys[index])) {
        return false;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/index.ts:260:29
Error: Type 'undefined' cannot be used as an index type. 

      if (!deeplyEqual(left[key], right[key])) {
        return false;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/index.ts:260:41
Error: Type 'undefined' cannot be used as an index type. 

      if (!deeplyEqual(left[key], right[key])) {
        return false;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/calendar/calendar.svelte:43:23
Error: Expression produces a union type that is too complex to represent. (ts)
-->
<CalendarPrimitive.Root
  bind:value={value as never}
  bind:ref
  bind:placeholder
  {weekdayFormat}
  {disableDaysOutsideMonth}
  class={cn(
    "bg-background group/calendar p-3 [--cell-size:--spacing(8)] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent",
    className
  )}
  {locale}
  {monthFormat}
  {yearFormat}
  {...restProps}
>
  {#snippet children({ months, weekdays })}
    <Calendar.Months>
      <Calendar.Nav>
        <Calendar.PrevButton variant={buttonVariant} />
        <Calendar.NextButton variant={buttonVariant} />
      </Calendar.Nav>
      {#each months as month, monthIndex (month)}
        <Calendar.Month>
          <Calendar.Header>
            <Calendar.Caption
              {captionLayout}
              months={monthsProp}
              {monthFormat}
              {years}
              {yearFormat}
              month={month.value}
              bind:placeholder
              {locale}
              {monthIndex}
            />
          </Calendar.Header>
          <Calendar.Grid>
            <Calendar.GridHead>
              <Calendar.GridRow class="select-none">
                {#each weekdays as weekday (weekday)}
                  <Calendar.HeadCell>
                    {weekday.slice(0, 2)}
                  </Calendar.HeadCell>
                {/each}
              </Calendar.GridRow>
            </Calendar.GridHead>
            <Calendar.GridBody>
              {#each month.weeks as weekDates (weekDates)}
                <Calendar.GridRow class="mt-2 w-full">
                  {#each weekDates as date (date)}
                    <Calendar.Cell {date} month={month.value}>
                      {#if day}
                        {@render day({
                          day: date,
                          outsideMonth: !isEqualMonth(date, month.value),
                        })}
                      {:else}
                        <Calendar.Day />
                      {/if}
                    </Calendar.Cell>
                  {/each}
                </Calendar.GridRow>
              {/each}
            </Calendar.GridBody>
          </Calendar.Grid>
        </Calendar.Month>
      {/each}
    </Calendar.Months>
  {/snippet}
</CalendarPrimitive.Root>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/calendar/calendar.svelte:43:23
Error: Type '{ children: (this: void, { months, weekdays }: CalendarRootSnippetProps) => any; id?: string; readonly?: boolean; type: "single"; title?: string | null | undefined; disabled?: boolean; ... 448 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: numb...' is not assignable to type 'CalendarRootProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: (this: void, { months, weekdays }: CalendarRootSnippetProps) => any; id?: string; readonly?: boolean; type: "single"; title?: string | null | undefined; disabled?: boolean; ... 448 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: numb...' is not assignable to type 'CalendarRootProps' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Type '{ children: (this: void, { months, weekdays }: CalendarRootSnippetProps) => any; id?: string; readonly?: boolean; type: "single"; title?: string | null | undefined; disabled?: boolean; ... 448 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: numb...' is not assignable to type 'CalendarBaseRootPropsWithoutHTML & Omit<CalendarSingleRootPropsWithoutHTML, "child" | "children"> & { ...; } & Without<...>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Type '{ children: (this: void, { months, weekdays }: CalendarRootSnippetProps) => any; id?: string; readonly?: boolean; type: "single"; title?: string | null | undefined; disabled?: boolean; ... 448 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: numb...' is not assignable to type 'CalendarBaseRootPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
        Types of property 'placeholder' are incompatible.
          Type 'DateValue | undefined' is not assignable to type 'DateValue'.
            Type 'undefined' is not assignable to type 'DateValue'. (ts)
-->
<CalendarPrimitive.Root
  bind:value={value as never}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/calendar/calendar-caption.svelte:40:22
Error: Type '{ months: number[] | undefined; monthFormat: "long" | "short" | "narrow" | "numeric" | "2-digit" | ((month: number) => string) | undefined; value: number; onchange: (e: Event & { ...; }) => void; }' is not assignable to type 'Omit<Omit<CalendarMonthSelectProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'months' are incompatible.
    Type 'number[] | undefined' is not assignable to type 'number[]'.
      Type 'undefined' is not assignable to type 'number[]'. (ts)
{#snippet MonthSelect()}
  <CalendarMonthSelect
    {months}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/calendar/calendar-caption.svelte:53:21
Error: Type '{ years: number[] | undefined; yearFormat: "numeric" | "2-digit" | ((year: number) => string) | undefined; value: number; }' is not assignable to type 'Omit<Omit<CalendarYearSelectProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'years' are incompatible.
    Type 'number[] | undefined' is not assignable to type 'number[]'.
      Type 'undefined' is not assignable to type 'number[]'. (ts)
{#snippet YearSelect()}
  <CalendarYearSelect {years} {yearFormat} value={month.year} />
{/snippet}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/dropdown-menu/dropdown-menu-radio-group.svelte:9:33
Error: Expression produces a union type that is too complex to represent. (ts)
</script>
<DropdownMenuPrimitive.RadioGroup
  bind:ref
  bind:value
  data-slot="dropdown-menu-radio-group"
  {...restProps}
/>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/dropdown-menu/dropdown-menu-radio-group.svelte:9:33
Error: Type '{ onValueChange?: OnChangeFn<string>; child?: Snippet<[{ props: Record<string, unknown>; }]>; children?: Snippet<[]>; style?: StyleProperties | string | null | undefined; ... 431 more ...; "data-slot": string; }' is not assignable to type 'Omit<{ value?: string; onValueChange?: OnChangeFn<string>; }, "child" | "children"> & { child?: Snippet<[{ props: Record<string, unknown>; }]>; children?: Snippet<...>; style?: string | ... 2 more ... | undefined; ref?: HTMLElement | ... 1 more ... | undefined; } & Without<...>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ onValueChange?: OnChangeFn<string>; child?: Snippet<[{ props: Record<string, unknown>; }]>; children?: Snippet<[]>; style?: StyleProperties | string | null | undefined; ... 431 more ...; "data-slot": string; }' is not assignable to type 'Omit<{ value?: string; onValueChange?: OnChangeFn<string>; }, "child" | "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'value' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'. (ts)
</script>
<DropdownMenuPrimitive.RadioGroup
  bind:ref

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/view.svelte.ts:284:7
Error: Type 'GroupingState | undefined' is not assignable to type 'GroupingState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string[]'. 
      this.view.display = this.initial.display || {};
      this.view.display.grouping = this.initial.display?.grouping;
      this.view.display.sort = this.initial.display?.sort;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/view.svelte.ts:285:7
Error: Type 'SortingState | undefined' is not assignable to type 'SortingState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'ColumnSort[]'. 
      this.view.display.grouping = this.initial.display?.grouping;
      this.view.display.sort = this.initial.display?.sort;
      this.view.display.expanded = this.initial.display?.expanded;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/view.svelte.ts:286:7
Error: Type 'ExpandedState | undefined' is not assignable to type 'ExpandedState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'ExpandedState'. 
      this.view.display.sort = this.initial.display?.sort;
      this.view.display.expanded = this.initial.display?.expanded;
      this.view.display.visibility = this.initial.display?.visibility;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/view.svelte.ts:287:7
Error: Type 'VisibilityState | undefined' is not assignable to type 'VisibilityState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'VisibilityState'. 
      this.view.display.expanded = this.initial.display?.expanded;
      this.view.display.visibility = this.initial.display?.visibility;
      this.view.filters = this.initial.filters;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/current-view.svelte.ts:144:41
Error: Argument of type 'boolean | undefined' is not assignable to parameter of type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'. 
  toggleColumnVisibility(column: string) {
    this.updateColumnVisibility(column, this.view.getVisibility()[column]);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/current-views.svelte.ts:34:27
Error: Object is possibly 'undefined'. 
      );
      this.activeViewId = viewsStates[0].view.id;
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/current-views.svelte.ts:114:7
Error: Type 'undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target. 
      this.setActive(this.previousViewId);
      this.previousViewId = undefined;
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/current-account.svelte.ts:71:18
Error: Type 'Transaction | undefined' is not assignable to type 'Transaction'.
  Type 'undefined' is not assignable to type 'Transaction'.
    Type 'undefined' is not assignable to type '{ id: number; date: string; parentId: number | null; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; accountId: number; status: "cleared" | "pending" | "scheduled" | null; payeeId: number | null; amount: number; categoryId: number | null; scheduleId: number | null; }'. 
    const idx = this.transactions?.findIndex((transaction) => transaction.id === id);
    return [idx, this.transactions[idx]];
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/server-account.svelte.ts:237:7
Error: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'. 
    this.searchTimeout = setTimeout(async () => {
      this.filters.searchQuery = query || undefined;
      await this.loadTransactions(accountId, true); // Reset to first page

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/server-account.svelte.ts:247:5
Error: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'. 
  async setDateFilter(accountId: number, dateFrom?: string, dateTo?: string) {
    this.filters.dateFrom = dateFrom;
    this.filters.dateTo = dateTo;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/views/server-account.svelte.ts:248:5
Error: Type 'string | undefined' is not assignable to type 'string' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'string'. 
    this.filters.dateFrom = dateFrom;
    this.filters.dateTo = dateTo;
    await this.loadTransactions(accountId, true); // Reset to first page

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/command/command-dialog.svelte:29:17
Error: Type '{ children: () => any; class: string; portalProps: PortalProps | undefined; }' is not assignable to type 'Omit<Omit<DialogContentProps, "child">, "children"> & { portalProps?: PortalProps; children: Snippet<[]>; showCloseButton?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: () => any; class: string; portalProps: PortalProps | undefined; }' is not assignable to type '{ portalProps?: PortalProps; children: Snippet<[]>; showCloseButton?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'portalProps' are incompatible.
      Type 'PortalProps | undefined' is not assignable to type 'PortalProps'.
        Type 'undefined' is not assignable to type 'PortalProps'. (ts)
  </Dialog.Header>
  <Dialog.Content class="overflow-hidden p-0" {portalProps}>
    <Command

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/command/command-group.svelte:29:30
Error: Type '{ children: Snippet<[]> | undefined; }' is not assignable to type 'Omit<{}, "child" | "children"> & { child?: Snippet<[{ props: Record<string, unknown>; }]>; children?: Snippet<[]>; style?: string | StyleProperties | null | undefined; ref?: HTMLElement | ... 1 more ... | undefined; } & Without<...>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: Snippet<[]> | undefined; }' is not assignable to type '{ child?: Snippet<[{ props: Record<string, unknown>; }]>; children?: Snippet<[]>; style?: string | StyleProperties | null | undefined; ref?: HTMLElement | null | undefined; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'children' are incompatible.
      Type 'Snippet<[]> | undefined' is not assignable to type 'Snippet<[]>'.
        Type 'undefined' is not assignable to type 'Snippet<[]>'. (ts)
  {/if}
  <CommandPrimitive.GroupItems {children} />
</CommandPrimitive.Group>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/date-frequency.ts:137:55
Error: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. 
        // Find the next occurrence of this weekday from the current week cursor
        nextDate = getNextWeekdayFlexible(weekCursor, targetWeekday, true);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/date-frequency.ts:143:67
Error: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. 
          const weekStart = startOfWeek(weekCursor, "en-us", "sun");
          const candidateDate = getNextWeekdayFlexible(weekStart, targetWeekday, true);
          if (candidateDate.compare(nextDate) <= 0) {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/date-frequency.ts:149:55
Error: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. 
      } else {
        nextDate = getNextWeekdayFlexible(weekCursor, targetWeekday, true);
      }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/date-frequency.ts:202:45
Error: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. 
        try {
          return cursor.set({ day: Math.min(targetDay, getDaysInMonth(cursor)) });
        } catch {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/date-frequency.ts:226:79
Error: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'. 
        const weekDay = weekDays[dayIndex];
        const candidateDate = getNthWeekdayOfMonth(cursor.year, cursor.month, week, weekDay);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/repeating_date.svelte.ts:522:26
Error: Object is possibly 'undefined'. 
        weeks.length === 1
          ? (weekOptions[weeks[0] - 1]?.label ?? "")
          : listFmt.format(weeks.map((w) => weekOptions[w - 1]?.label ?? ""));

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/models/repeating_date.svelte.ts:626:5
Error: Type 'DateValue | undefined' is not assignable to type 'DateValue' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target.
  Type 'undefined' is not assignable to type 'DateValue'. 
  set end(value: DateValue | null | undefined) {
    this.value.end = value === null ? undefined : value;
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/forms/manage-schedule-form.svelte:154:18
Error: Type 'number[]' is not assignable to type '[number, number]'.
  Target requires 2 element(s) but source may have fewer. (ts)
            {...props}
            bind:value={amount}
            bind:type={$formData.amount_type}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/current-account.svelte.ts:71:18
Error: Type 'Transaction | undefined' is not assignable to type 'Transaction'.
  Type 'undefined' is not assignable to type 'Transaction'.
    Type 'undefined' is not assignable to type '{ id: number; date: string; parentId: number | null; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; accountId: number; status: "cleared" | "pending" | "scheduled" | null; payeeId: number | null; amount: number; categoryId: number | null; scheduleId: number | null; }'. 
    const idx = this.transactions?.findIndex((transaction) => transaction.id === id);
    return [idx, this.transactions[idx]];
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/current-view.svelte.ts:144:41
Error: Argument of type 'boolean | undefined' is not assignable to parameter of type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'. 
  toggleColumnVisibility(column: string) {
    this.updateColumnVisibility(column, this.view.getVisibility()[column]);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/shared/index.ts:1:41
Error: Cannot find module './display-input.svelte' or its corresponding type declarations. 
export { default as DisplayInput } from './display-input.svelte';
export { default as FilterInput } from './filter-input.svelte';

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/shared/index.ts:2:40
Error: Cannot find module './filter-input.svelte' or its corresponding type declarations. 
export { default as DisplayInput } from './display-input.svelte';
export { default as FilterInput } from './filter-input.svelte';

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/colors.ts:20:5
Error: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
  getChartColor: (index: number): string => {
    return chartColors[index % chartColors.length] || chartColors[0];
  },

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-colors.ts:118:5
Error: Object is possibly 'undefined'. 
  Object.values(CHART_COLOR_SCHEMES).forEach((scheme) => {
    grouped[scheme.category].push(scheme);
  });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-colors.ts:136:28
Error: 'CHART_COLOR_SCHEMES.default' is possibly 'undefined'. 
  const scheme = getColorScheme(key);
  return scheme?.colors || CHART_COLOR_SCHEMES.default.colors;
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-colors.ts:136:48
Error: Property 'default' comes from an index signature, so it must be accessed with ['default']. 
  const scheme = getColorScheme(key);
  return scheme?.colors || CHART_COLOR_SCHEMES.default.colors;
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/controls/chart-threshold-controls.svelte:76:20
Error: Type '{ value: number[]; min: number; max: number; step: number; class: string; }' is not assignable to type 'WithoutChildrenOrChild<SliderRootProps>'.
  Property 'type' is missing in type '{ value: number[]; min: number; max: number; step: number; class: string; }' but required in type 'Omit<Omit<Omit<SliderMultiRootPropsWithoutHTML, "child" | "children"> & { child?: Snippet<[SliderRootSnippetProps & { ...; }]>; children?: Snippet<...>; style?: string | ... 2 more ... | undefined; ref?: HTMLElement | ... 1 more ... | undefined; } & Without<...>, "child">, "children">'. (ts)
        <Label for="above-opacity">Above Threshold Opacity</Label>
        <Slider.Root
          bind:value={aboveOpacityArray}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/controls/chart-threshold-controls.svelte:90:20
Error: Type '{ value: number[]; min: number; max: number; step: number; class: string; }' is not assignable to type 'WithoutChildrenOrChild<SliderRootProps>'.
  Property 'type' is missing in type '{ value: number[]; min: number; max: number; step: number; class: string; }' but required in type 'Omit<Omit<Omit<SliderMultiRootPropsWithoutHTML, "child" | "children"> & { child?: Snippet<[SliderRootSnippetProps & { ...; }]>; children?: Snippet<...>; style?: string | ... 2 more ... | undefined; ref?: HTMLElement | ... 1 more ... | undefined; } & Without<...>, "child">, "children">'. (ts)
        <Label for="below-opacity">Below Threshold Opacity</Label>
        <Slider.Root
          bind:value={belowOpacityArray}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/controls/chart-threshold-controls.svelte:116:24
Error: Type '{ value: number[]; min: number; max: number; step: number; class: string; }' is not assignable to type 'WithoutChildrenOrChild<SliderRootProps>'.
  Property 'type' is missing in type '{ value: number[]; min: number; max: number; step: number; class: string; }' but required in type 'Omit<Omit<Omit<SliderMultiRootPropsWithoutHTML, "child" | "children"> & { child?: Snippet<[SliderRootSnippetProps & { ...; }]>; children?: Snippet<...>; style?: string | ... 2 more ... | undefined; ref?: HTMLElement | ... 1 more ... | undefined; } & Without<...>, "child">, "children">'. (ts)
            <Label for="line-opacity" class="text-xs">Line Opacity</Label>
            <Slider.Root
              bind:value={lineOpacityArray}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/controls/chart-control-panel.svelte:332:40
Error: Type '{ showGrid: boolean; showHorizontal: boolean; showVertical: boolean; gridOpacity: number; allowGridChange: true; calculatedGridOpacity: number | undefined; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'calculatedGridOpacity' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'. (ts)
                    {#if allowGridChange}
                      <ChartGridControls
                        bind:showGrid

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/controls/chart-control-panel.svelte:344:45
Error: Type '{ showCrosshair: boolean; crosshairAxis: "none" | "x" | "y" | "both"; crosshairStyle: "solid" | "dashed" | "dotted"; crosshairOpacity: number; allowCrosshairChange: true; calculatedOpacity: number | undefined; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'calculatedOpacity' are incompatible.
    Type 'number | undefined' is not assignable to type 'number'.
      Type 'undefined' is not assignable to type 'number'. (ts)
                    {#if allowCrosshairChange}
                      <ChartCrosshairControls
                        bind:showCrosshair

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:96:37
Error: Object is possibly 'undefined'. 
    return {
      x: groupField === 'x' ? key : points[0].x,
      y,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:98:51
Error: Object is possibly 'undefined'. 
      y,
      category: groupField === 'category' ? key : points[0].category,
      series: groupField === 'series' ? key : points[0].series,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:99:47
Error: Object is possibly 'undefined'. 
      category: groupField === 'category' ? key : points[0].category,
      series: groupField === 'series' ? key : points[0].series,
      metadata: {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:237:17
Error: Argument of type 'ChartDataPoint | undefined' is not assignable to parameter of type 'ChartDataPoint'.
  Type 'undefined' is not assignable to type 'ChartDataPoint'. 
  for (let i = 0; i < sorted.length - 1; i++) {
    result.push(sorted[i]);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:239:21
Error: Object is possibly 'undefined'. 
    
    const current = sorted[i].x as Date;
    const next = sorted[i + 1].x as Date;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:240:18
Error: Object is possibly 'undefined'. 
    const current = sorted[i].x as Date;
    const next = sorted[i + 1].x as Date;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:267:17
Error: Object is possibly 'undefined'. 
        const progress = j / (missingPoints + 1);
        fillY = sorted[i].y + (sorted[i + 1].y - sorted[i].y) * progress;
      } else if (fillValue === 'previous') {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:267:32
Error: Object is possibly 'undefined'. 
        const progress = j / (missingPoints + 1);
        fillY = sorted[i].y + (sorted[i + 1].y - sorted[i].y) * progress;
      } else if (fillValue === 'previous') {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:267:50
Error: Object is possibly 'undefined'. 
        const progress = j / (missingPoints + 1);
        fillY = sorted[i].y + (sorted[i + 1].y - sorted[i].y) * progress;
      } else if (fillValue === 'previous') {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:269:17
Error: Object is possibly 'undefined'. 
      } else if (fillValue === 'previous') {
        fillY = sorted[i].y;
      } else {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:277:19
Error: Object is possibly 'undefined'. 
        y: fillY,
        category: sorted[i].category,
        series: sorted[i].series,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:278:17
Error: Object is possibly 'undefined'. 
        category: sorted[i].category,
        series: sorted[i].series,
        metadata: {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:288:15
Error: Argument of type 'ChartDataPoint | undefined' is not assignable to parameter of type 'ChartDataPoint'.
  Type 'undefined' is not assignable to type 'ChartDataPoint'. 
  
  result.push(sorted[sorted.length - 1]);
  return result;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:357:11
Error: Type '{ y: number; metadata: { aggregated: boolean; originalCount: number; aggregationFactor: number; aggregatedPoints: ChartDataPoint[]; }; x?: string | number | Date | DateValue; category?: string | undefined; series?: string | undefined; key?: string | undefined; }' is not assignable to type 'ChartDataPoint'.
  Property 'x' is optional in type '{ y: number; metadata: { aggregated: boolean; originalCount: number; aggregationFactor: number; aggregatedPoints: ChartDataPoint[]; }; x?: string | number | DateValue | Date; category?: string | undefined; series?: string | undefined; key?: string | undefined; }' but required in type 'ChartDataPoint'. 
    // Use the first point as base, aggregate the y values
    const aggregated: ChartDataPoint = {
      ...chunk[0],

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-data.ts:361:12
Error: Object is possibly 'undefined'. 
      metadata: {
        ...chunk[0].metadata,
        aggregated: true,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/chart-transformers.ts:69:31
Error: Parameter 'd' implicitly has an 'any' type. 
    const category = item[categoryField] || item.category || item.label || String(item.x);
    const existing = acc.find(d => d.category === category);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/dynamic-chart-renderer.svelte:121:7
Error: Object literal may only specify known properties, and '"y"' does not exist in type 'ThresholdProps'. (ts)
    <Threshold 
      y={thresholdConfig.value}
      curve={transformedConfig['curve']}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:17:17
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
  return result ? {
    r: parseInt(result[1], 16),
    g: parseInt(result[2], 16),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:18:17
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
    r: parseInt(result[1], 16),
    g: parseInt(result[2], 16),
    b: parseInt(result[3], 16)

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:19:17
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
    g: parseInt(result[2], 16),
    b: parseInt(result[3], 16)
  } : null;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:31:19
Error: 'rs' is possibly 'undefined'. 
  });
  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:31:33
Error: 'gs' is possibly 'undefined'. 
  });
  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/accessibility-colors.ts:31:47
Error: 'bs' is possibly 'undefined'. 
  });
  return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/chart-core.svelte:190:17
Error: Object literal may only specify known properties, and '"tickFormat"' does not exist in type 'AxisProps<Transition>'. (ts)
                }}
                tickFormat={config.axes.x.format}
              />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/chart-core.svelte:250:22
Error: Type '{ axis: "none" | "x" | "y" | "both" | undefined; points: false | { r: number; fill: string; stroke: string; strokeWidth: number; }; lines: false | { stroke: string; strokeWidth: number; class: string; opacity: number; }; }' is not assignable to type 'HighlightPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'axis' are incompatible.
    Type '"none" | "x" | "y" | "both" | undefined' is not assignable to type '"none" | "x" | "y" | "both"'.
      Type 'undefined' is not assignable to type '"none" | "x" | "y" | "both"'. (ts)
            {@const highlight = config.interactions.highlight}
            <Highlight
              axis={crosshairAxis === 'none' ? 'none' : crosshairAxis}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/chart-core.svelte:391:22
Error: Type '{ axis: "none" | "x" | "y" | "both" | undefined; points: false | { r: number; fill: string; stroke: string; strokeWidth: number; }; lines: false | { stroke: string; strokeWidth: number; class: string; opacity: number; }; }' is not assignable to type 'HighlightPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'axis' are incompatible.
    Type '"none" | "x" | "y" | "both" | undefined' is not assignable to type '"none" | "x" | "y" | "both"'.
      Type 'undefined' is not assignable to type '"none" | "x" | "y" | "both"'. (ts)
            {@const highlight = config.interactions.highlight}
            <Highlight
              axis={crosshairAxis === 'none' ? 'none' : crosshairAxis}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/chart-core.svelte:490:17
Error: Object literal may only specify known properties, and '"tickFormat"' does not exist in type 'AxisProps<Transition>'. (ts)
                }}
                tickFormat={config.axes.x.format}
                {...(xAxisTicks ? { ticks: xAxisTicks } : {})}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/core/chart-core.svelte:601:20
Error: Type '{ axis: "none" | "x" | "y" | "both" | undefined; points: false | { r: number; fill: string; stroke: string; strokeWidth: number; }; lines: false | { stroke: string; strokeWidth: number; class: string; opacity: number; }; }' is not assignable to type 'HighlightPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'axis' are incompatible.
    Type '"none" | "x" | "y" | "both" | undefined' is not assignable to type '"none" | "x" | "y" | "both"'.
      Type 'undefined' is not assignable to type '"none" | "x" | "y" | "both"'. (ts)
        {#if showCrosshair && config.interactions?.highlight?.enabled && config.interactions?.tooltip?.enabled && !isChartCircular && !isChartHierarchical}
          <Highlight
            axis={crosshairAxis === 'none' ? 'none' : crosshairAxis}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:75:62
Error: Argument of type '"solid" | "dashed" | "dotted" | undefined' is not assignable to parameter of type '"solid" | "dashed" | "dotted"'.
  Type 'undefined' is not assignable to type '"solid" | "dashed" | "dotted"'. (ts)
  let crosshairAxis = $state<'x' | 'y' | 'both' | 'none'>(DEFAULT_INTERACTIONS_CONFIG.crosshair.axis as 'x' | 'y' | 'both' | 'none');
  let crosshairStyle = $state<'solid' | 'dashed' | 'dotted'>(DEFAULT_INTERACTIONS_CONFIG.crosshair.style);
  let crosshairOpacity = $state(DEFAULT_INTERACTIONS_CONFIG.crosshair.opacity); // Will be updated by effect to use accessibility-aware value

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:80:64
Error: Argument of type '"inside" | "outside" | "center" | undefined' is not assignable to parameter of type '"inside" | "outside" | "center"'.
  Type 'undefined' is not assignable to type '"inside" | "outside" | "center"'. (ts)
  let showLabels = $state(DEFAULT_STYLING_CONFIG.labels.show);
  let labelPlacement = $state<'inside' | 'outside' | 'center'>(DEFAULT_STYLING_CONFIG.labels.placement);
  let labelOffset = $state(DEFAULT_STYLING_CONFIG.labels.offset?.y ?? 4);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:357:16
Error: Type 'boolean | undefined' is not assignable to type 'boolean'.
  Type 'undefined' is not assignable to type 'boolean'. (ts)
          
          bind:showPoints
          allowPointsChange={config.controls.allowPointsChange}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:441:11
Error: Type '{ show: boolean | undefined; radius: number | undefined; strokeWidth: number | undefined; fillOpacity: number | undefined; strokeOpacity: number | undefined; fill?: string; stroke?: string; }' is not assignable to type 'PointsConfig' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'show' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'. (ts)
          ...config.styling,
          points: {
            ...config.styling.points,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:449:11
Error: Type '{ show: boolean | undefined; horizontal: boolean | undefined; vertical: boolean | undefined; opacity: number | undefined; }' is not assignable to type 'GridConfig' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'show' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'. (ts)
          },
          grid: {
            ...config.styling.grid,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/charts/unified-chart.svelte:456:11
Error: Type '{ show: boolean | undefined; placement: "inside" | "outside" | "center"; offset: { x?: number; y?: number; }; format: (datum: any) => string; class?: string; }' is not assignable to type 'LabelConfig' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'show' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'. (ts)
          },
          labels: {
            ...config.styling.labels,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-server-sync.svelte.ts:107:24
Error: Argument of type '{ onSuccess: ((data: T) => void) | undefined; onError: (error: Error, rollback: () => void) => void; optimistic: true; }' is not assignable to parameter of type 'UseServerSyncOptions<T>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'onSuccess' are incompatible.
    Type '((data: T) => void) | undefined' is not assignable to type '(data: T) => void'.
      Type 'undefined' is not assignable to type '(data: T) => void'. 
): UseServerSyncReturn<T> {
  return useServerSync({
    onSuccess: options.onSuccess,
    onError: (error, rollback) => {
      console.error(`${options.entityName} operation failed:`, error);
      rollback();
      if (options.onError) {
        options.onError(error);
      }
    },
    optimistic: true
  });
}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:24:3
Error: Module '"@tanstack/table-core"' has no exported member 'createSvelteTable'. 
  getExpandedRowModel,
  createSvelteTable
} from "@tanstack/table-core";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:173:17
Error: 'createSvelteTable' cannot be used as a value because it was imported using 'import type'. 
  // Create table instance
  const table = createSvelteTable({
    get data() {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:202:22
Error: 'getCoreRowModel' cannot be used as a value because it was imported using 'import type'. 
    onGlobalFilterChange: enableGlobalFilter ? setGlobalFilter : undefined,
    getCoreRowModel: getCoreRowModel(),
    getFilteredRowModel: enableColumnFilters || enableGlobalFilter ? getFilteredRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:203:70
Error: 'getFilteredRowModel' cannot be used as a value because it was imported using 'import type'. 
    getCoreRowModel: getCoreRowModel(),
    getFilteredRowModel: enableColumnFilters || enableGlobalFilter ? getFilteredRowModel() : undefined,
    getPaginationRowModel: enablePagination ? getPaginationRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:204:47
Error: 'getPaginationRowModel' cannot be used as a value because it was imported using 'import type'. 
    getFilteredRowModel: enableColumnFilters || enableGlobalFilter ? getFilteredRowModel() : undefined,
    getPaginationRowModel: enablePagination ? getPaginationRowModel() : undefined,
    getSortedRowModel: enableSorting ? getSortedRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:205:40
Error: 'getSortedRowModel' cannot be used as a value because it was imported using 'import type'. 
    getPaginationRowModel: enablePagination ? getPaginationRowModel() : undefined,
    getSortedRowModel: enableSorting ? getSortedRowModel() : undefined,
    getFacetedRowModel: enableColumnFilters ? getFacetedRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:206:47
Error: 'getFacetedRowModel' cannot be used as a value because it was imported using 'import type'. 
    getSortedRowModel: enableSorting ? getSortedRowModel() : undefined,
    getFacetedRowModel: enableColumnFilters ? getFacetedRowModel() : undefined,
    getGroupedRowModel: enableGrouping ? getGroupedRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:207:42
Error: 'getGroupedRowModel' cannot be used as a value because it was imported using 'import type'. 
    getFacetedRowModel: enableColumnFilters ? getFacetedRowModel() : undefined,
    getGroupedRowModel: enableGrouping ? getGroupedRowModel() : undefined,
    getExpandedRowModel: enableExpanding ? getExpandedRowModel() : undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:208:44
Error: 'getExpandedRowModel' cannot be used as a value because it was imported using 'import type'. 
    getGroupedRowModel: enableGrouping ? getGroupedRowModel() : undefined,
    getExpandedRowModel: enableExpanding ? getExpandedRowModel() : undefined,
    autoResetPageIndex: false,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/hooks/ui/use-data-table.svelte.ts:219:42
Error: Parameter 'row' implicitly has an 'any' type. 
  const selectedRows = $derived(
    table.getSelectedRowModel().rows.map(row => row.original)
  );

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/compound/form-dialog.svelte:145:17
Error: Type '{ children: () => any; class: string; id: string | undefined; style: string | undefined; }' is not assignable to type 'Omit<Omit<DialogContentProps, "child">, "children"> & { portalProps?: PortalProps; children: Snippet<[]>; showCloseButton?: boolean; }' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: () => any; class: string; id: string | undefined; style: string | undefined; }' is not assignable to type 'Omit<Omit<DialogContentProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'id' are incompatible.
      Type 'string | undefined' is not assignable to type 'string'.
        Type 'undefined' is not assignable to type 'string'. (ts)
<Dialog.Root bind:open={dialogOpen}>
  <Dialog.Content
    class="sm:{sizeClasses[maxWidth]} {className || ''}"

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/chart/chart-tooltip.svelte:59:64
Error: Argument of type 'TooltipPayload | undefined' is not assignable to parameter of type 'TooltipPayload'.
  Type 'undefined' is not assignable to type 'TooltipPayload'. (ts)

		const itemConfig = getPayloadConfigFromPayload(chart.config, item, key);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/chart/chart-tooltip.svelte:64:29
Error: 'item' is possibly 'undefined'. (ts)
				? (chart.config[label as keyof typeof chart.config]?.label ?? label)
				: (itemConfig?.label ?? item.label);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/range-calendar/range-calendar.svelte:39:28
Error: Expression produces a union type that is too complex to represent. (ts)
</script>
<RangeCalendarPrimitive.Root
  bind:ref
  bind:value
  bind:placeholder
  {weekdayFormat}
  {disableDaysOutsideMonth}
  class={cn(
    "bg-background group/calendar p-3 [--cell-size:--spacing(8)] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent",
    className
  )}
  {locale}
  {monthFormat}
  {yearFormat}
  {...restProps}
>
  {#snippet children({ months, weekdays })}
    <RangeCalendar.Months>
      <RangeCalendar.Nav>
        <RangeCalendar.PrevButton variant={buttonVariant} />
        <RangeCalendar.NextButton variant={buttonVariant} />
      </RangeCalendar.Nav>
      {#each months as month, monthIndex (month)}
        <RangeCalendar.Month>
          <RangeCalendar.Header>
            <RangeCalendar.Caption
              {captionLayout}
              months={monthsProp}
              {monthFormat}
              {years}
              {yearFormat}
              month={month.value}
              bind:placeholder
              {locale}
              {monthIndex}
            />
          </RangeCalendar.Header>
          <RangeCalendar.Grid>
            <RangeCalendar.GridHead>
              <RangeCalendar.GridRow class="select-none">
                {#each weekdays as weekday (weekday)}
                  <RangeCalendar.HeadCell>
                    {weekday.slice(0, 2)}
                  </RangeCalendar.HeadCell>
                {/each}
              </RangeCalendar.GridRow>
            </RangeCalendar.GridHead>
            <RangeCalendar.GridBody>
              {#each month.weeks as weekDates (weekDates)}
                <RangeCalendar.GridRow class="mt-2 w-full">
                  {#each weekDates as date (date)}
                    <RangeCalendar.Cell {date} month={month.value}>
                      {#if day}
                        {@render day({
                          day: date,
                          outsideMonth: !isEqualMonth(date, month.value),
                        })}
                      {:else}
                        <RangeCalendar.Day />
                      {/if}
                    </RangeCalendar.Cell>
                  {/each}
                </RangeCalendar.GridRow>
              {/each}
            </RangeCalendar.GridBody>
          </RangeCalendar.Grid>
        </RangeCalendar.Month>
      {/each}
    </RangeCalendar.Months>
  {/snippet}
</RangeCalendarPrimitive.Root>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/range-calendar/range-calendar.svelte:39:28
Error: Type '{ children: (this: void, { months, weekdays }: RangeCalendarRootSnippetProps) => any; id?: string; readonly?: boolean; title?: string | null | undefined; disabled?: boolean; ... 451 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: number) => stri...' is not assignable to type 'Omit<{ value?: DateRange; onValueChange?: OnChangeFn<DateRange>; placeholder?: DateValue; onPlaceholderChange?: OnChangeFn<DateValue>; ... 21 more ...; yearFormat?: "numeric" | ... 2 more ... | undefined; }, "child" | "children"> & { ...; } & Without<...>' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: (this: void, { months, weekdays }: RangeCalendarRootSnippetProps) => any; id?: string; readonly?: boolean; title?: string | null | undefined; disabled?: boolean; ... 451 more ...; yearFormat: ("numeric" | ... 1 more ... | ((year: number) => string)) & ("numeric" | ... 1 more ... | ((year: number) => stri...' is not assignable to type 'Omit<{ value?: DateRange; onValueChange?: OnChangeFn<DateRange>; placeholder?: DateValue; onPlaceholderChange?: OnChangeFn<DateValue>; ... 21 more ...; yearFormat?: "numeric" | ... 2 more ... | undefined; }, "child" | "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Types of property 'value' are incompatible.
      Type 'DateRange | undefined' is not assignable to type 'DateRange'.
        Type 'undefined' is not assignable to type 'DateRange'. (ts)
</script>
<RangeCalendarPrimitive.Root
  bind:ref

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/range-calendar/range-calendar-caption.svelte:40:27
Error: Type '{ months: number[] | undefined; monthFormat: "long" | "short" | "narrow" | "numeric" | "2-digit" | ((month: number) => string) | undefined; value: number; onchange: (e: Event & { ...; }) => void; }' is not assignable to type 'Omit<Omit<CalendarMonthSelectProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'months' are incompatible.
    Type 'number[] | undefined' is not assignable to type 'number[]'.
      Type 'undefined' is not assignable to type 'number[]'. (ts)
{#snippet MonthSelect()}
  <RangeCalendarMonthSelect
    {months}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/ui/range-calendar/range-calendar-caption.svelte:53:26
Error: Type '{ years: number[] | undefined; yearFormat: "numeric" | "2-digit" | ((year: number) => string) | undefined; value: number; }' is not assignable to type 'Omit<Omit<CalendarYearSelectProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'years' are incompatible.
    Type 'number[] | undefined' is not assignable to type 'number[]'.
      Type 'undefined' is not assignable to type 'number[]'. (ts)
{#snippet YearSelect()}
  <RangeCalendarYearSelect {years} {yearFormat} value={month.year} />
{/snippet}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:103:11
Error: 'existing.metadata' is possibly 'undefined'. 
          existing.y += Math.abs(transaction.amount);
          existing.metadata.count++;
        } else {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:103:29
Error: Property 'count' comes from an index signature, so it must be accessed with ['count']. 
          existing.y += Math.abs(transaction.amount);
          existing.metadata.count++;
        } else {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:108:13
Error: Object literal may only specify known properties, and 'label' does not exist in type 'ChartDataPoint'. 
            y: Math.abs(transaction.amount),
            label: monthLabel,
            metadata: { month: monthKey, label: monthLabel, count: 1 }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:120:16
Error: 'aYear' is possibly 'undefined'. 
        const [bYear, bMonth] = (b.x as string).split('-').map(Number);
        return aYear - bYear || aMonth - bMonth;
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:120:24
Error: 'bYear' is possibly 'undefined'. 
        const [bYear, bMonth] = (b.x as string).split('-').map(Number);
        return aYear - bYear || aMonth - bMonth;
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:120:33
Error: 'aMonth' is possibly 'undefined'. 
        const [bYear, bMonth] = (b.x as string).split('-').map(Number);
        return aYear - bYear || aMonth - bMonth;
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/utils/finance-chart-data.ts:120:42
Error: 'bMonth' is possibly 'undefined'. 
        const [bYear, bMonth] = (b.x as string).split('-').map(Number);
        return aYear - bYear || aMonth - bMonth;
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/domains/accounts/services.ts:49:50
Error: Argument of type '{ name: string; slug: string; notes: string | undefined; balance: number; }' is not assignable to parameter of type 'CreateAccountInput' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'notes' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'. 
    // Create account
    const account = await this.repository.create({
      name: sanitizedName,
      slug: uniqueSlug,
      notes: sanitizedNotes,
      balance
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/validation.ts:18:41
Error: Property 'errors' does not exist on type 'ZodError<T>'. 
      if (!result.success) {
        const firstError = result.error.errors[0];
        const field = firstError.path.join('.');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:23:12
Error: Property 'session' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 

  if (!ctx.session?.user) {
    throw new UnauthorizedError('Authentication required');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:30:17
Error: Property 'session' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 
      ...ctx,
      user: ctx.session.user 
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:41:14
Error: Property 'user' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 
    // This middleware should be used after requireAuth
    if (!ctx.user) {
      throw new UnauthorizedError('Authentication required');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:46:28
Error: Property 'user' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 
    // Check if user has required permission
    if (!hasPermission(ctx.user, permission)) {
      throw new ForbiddenError(`Permission '${permission}' required`);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:59:14
Error: Property 'user' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 
    // This middleware should be used after requireAuth
    if (!ctx.user) {
      throw new UnauthorizedError('Authentication required');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/shared/middleware/auth.ts:64:37
Error: Property 'user' does not exist on type '{ db: BunSQLiteDatabase<typeof import("/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/schema/index")> & { $client: Database; }; isTest: boolean | undefined; }'. 
    const requiredRoles = Array.isArray(role) ? role : [role];
    if (!requiredRoles.includes(ctx.user.role)) {
      throw new ForbiddenError(`Role '${requiredRoles.join(' or ')}' required`);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/domains/accounts/routes.ts:83:49
Error: Argument of type '{ name: string; notes?: string | undefined; initialBalance?: number | undefined; }' is not assignable to parameter of type 'CreateAccountData' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'notes' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'. 
    .mutation(async ({ input }) => {
      return await accountService.createAccount(input);
    }),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/domains/accounts/routes.ts:91:53
Error: Argument of type '{ name?: string | undefined; notes?: string | undefined; balance?: number | undefined; }' is not assignable to parameter of type 'UpdateAccountData' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'name' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'. 
      const { id, ...updateData } = input;
      return await accountService.updateAccount(id, updateData);
    }),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/payees.ts:17:28
Error: Argument of type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; } | undefined' is not assignable to parameter of type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'.
  Type 'undefined' is not assignable to type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'. 
      .returning();
    payees_collection.push(new_payee[0]);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/categories.ts:20:32
Error: Argument of type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; } | undefined' is not assignable to parameter of type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'.
  Type 'undefined' is not assignable to type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'. 
      .returning();
    categories_collection.push(new_category[0]);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:30:7
Error: Type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; } | undefined' is not assignable to type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'.
  Type 'undefined' is not assignable to type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'. 
    ) {
      new_payee = await payeeFactory(1).then((payees) => payees[0]);
      payees.push(new_payee);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:32:7
Error: Type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; } | undefined' is not assignable to type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'.
  Type 'undefined' is not assignable to type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }'. 
      payees.push(new_payee);
      new_category = await categoryFactory(1).then((categories) => categories[0]);
      categories.push(new_category);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:52:11
Error: Object is possibly 'undefined'. 
        date: new CalendarDate(
          random_dates[i].getFullYear(),
          random_dates[i].getMonth() + 1,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:53:11
Error: Object is possibly 'undefined'. 
          random_dates[i].getFullYear(),
          random_dates[i].getMonth() + 1,
          random_dates[i].getDate()

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:54:11
Error: Object is possibly 'undefined'. 
          random_dates[i].getMonth() + 1,
          random_dates[i].getDate()
        ).toString(),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/transactions.ts:58:34
Error: Argument of type '{ id: number; date: string; parentId: number | null; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; accountId: number; status: "cleared" | "pending" | "scheduled" | null; payeeId: number | null; amount: number; categoryId: number | null; scheduleId: number | null; } | undefined' is not assignable to parameter of type '{ accountId: number; id?: number | undefined; date?: string | undefined; parentId?: number | null | undefined; notes?: string | null | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; ... 5 more ...; scheduleId?: number | ... 1 more ... | undefined; }'.
  Type 'undefined' is not assignable to type '{ accountId: number; id?: number | undefined; date?: string | undefined; parentId?: number | null | undefined; notes?: string | null | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; ... 5 more ...; scheduleId?: number | ... 1 more ... | undefined; }'. 
      .returning();
    transactions_collection.push(new_transaction[0]);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/server/db/factories/accounts.ts:22:30
Error: Argument of type '{ id: number; } | undefined' is not assignable to parameter of type '{ id: number; }'.
  Type 'undefined' is not assignable to type '{ id: number; }'. 
    )[0];
    await transactionFactory(account);
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/current-views.svelte.ts:34:27
Error: Object is possibly 'undefined'. 
      );
      this.activeViewId = viewsStates[0].view.id;
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/current-views.svelte.ts:108:7
Error: Type 'undefined' is not assignable to type 'number' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the type of the target. 
      this.setActive(this.previousViewId);
      this.previousViewId = undefined;
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/global.svelte.ts:1:28
Error: Cannot find module '$lib/hooks/use-boolean.svelte' or its corresponding type declarations. 
import { UseBoolean } from "$lib/hooks/use-boolean.svelte";
import { UseNumber } from "$lib/hooks/use-number.svelte";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/states/global.svelte.ts:2:27
Error: Cannot find module '$lib/hooks/use-number.svelte' or its corresponding type declarations. 
import { UseBoolean } from "$lib/hooks/use-boolean.svelte";
import { UseNumber } from "$lib/hooks/use-number.svelte";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/index.ts:3:10
Error: Module '"./accounts-server"' has no exported member 'accountsServerRoutes'. 
export { accountRoutes } from "./accounts";
export { accountsServerRoutes } from "./accounts-server";
export { categoryRoutes } from "./categories";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/trpc/routes/index.ts:4:10
Error: '"./categories"' has no exported member named 'categoryRoutes'. Did you mean 'categoriesRoutes'? 
export { accountsServerRoutes } from "./accounts-server";
export { categoryRoutes } from "./categories";
export { payeeRoutes } from "./payees";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:56:37
Error: Object is possibly 'undefined'. (ts)
    const sortingState = sorting();
    if (sortingState.length > 0 && (sortingState[0].id !== 'id' && sortingState[0].id !== 'date')) {
      visibleColumns = Object.assign({}, visibleColumns, { balance: false });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:56:68
Error: Object is possibly 'undefined'. (ts)
    const sortingState = sorting();
    if (sortingState.length > 0 && (sortingState[0].id !== 'id' && sortingState[0].id !== 'date')) {
      visibleColumns = Object.assign({}, visibleColumns, { balance: false });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:139:48
Error: Property 'views' comes from an index signature, so it must be accessed with ['views']. (ts)

  const viewList = $derived(views || page.data.views || []);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:162:45
Error: Object is possibly 'undefined'. (ts)
    if (_currentViewStates.length > 0) {
      currentViewsStateValue.activeViewId = _currentViewStates[0].view.id;
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:177:29
Error: Type '{ content: ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>> | undefined; context: HeaderContext<TransactionsFormat, unknown>; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'content' are incompatible.
    Type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>> | undefined' is not assignable to type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>>'.
      Type 'undefined' is not assignable to type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>>'. (ts)
                {#if !header.isPlaceholder}
                  <FlexRender
                    content={header.column.columnDef.header}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:193:29
Error: Type '{ content: ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined; context: CellContext<TransactionsFormat, unknown>; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'content' are incompatible.
    Type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'.
      Type 'undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'. (ts)
                <Table.Cell>
                  <FlexRender
                    content={cell.column.columnDef.aggregatedCell}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table.svelte:202:29
Error: Type '{ content: ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined; context: CellContext<TransactionsFormat, unknown>; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'content' are incompatible.
    Type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'.
      Type 'undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'. (ts)
                <Table.Cell>
                  <FlexRender content={cell.column.columnDef.cell} context={cell.getContext()} />
                </Table.Cell>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table-checkbox.svelte:8:9
Error: Expression produces a union type that is too complex to represent. (ts)

<Checkbox {checked} {...restProps} />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table-checkbox.svelte:8:9
Error: Type '{ id?: string; name?: any; ref?: HTMLElement | null | undefined; readonly?: boolean | null | undefined | undefined; type?: "submit" | "reset" | "button" | undefined | null | undefined; title?: string | undefined | null | undefined; ... 444 more ...; checked: boolean | undefined; }' is not assignable to type 'Omit<Omit<CheckboxRootProps, "child">, "children">' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'checked' are incompatible.
    Type 'boolean | undefined' is not assignable to type 'boolean'.
      Type 'undefined' is not assignable to type 'boolean'. (ts)

<Checkbox {checked} {...restProps} />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/manage-view-form.svelte:40:27
Error: Argument of type 'ZodObject<{ id: ZodOptional<ZodNumber>; name: ZodString; description: ZodNullable<ZodOptional<ZodString>>; icon: ZodNullable<...>; filters: ZodOptional<...>; display: ZodOptional<...>; dirty: ZodOptional<...>; }, $strip>' is not assignable to parameter of type 'ZodObjectType'.
  Type 'ZodObject<{ id: ZodOptional<ZodNumber>; name: ZodString; description: ZodNullable<ZodOptional<ZodString>>; icon: ZodNullable<...>; filters: ZodOptional<...>; display: ZodOptional<...>; dirty: ZodOptional<...>; }, $strip>' is missing the following properties from type 'ZodType<Record<string, unknown>, ZodTypeDef, Record<string, unknown> | undefined>': _type, _parse, _getType, _getOrReturnCtx, and 7 more. (ts)
    dataType: "json",
    validators: zodClient(superformInsertViewSchema),
    onResult: async ({ result }) => {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table-toolbar.svelte:62:9
Error: Type 'number | undefined' is not assignable to type 'number'.
  Type 'undefined' is not assignable to type 'number'. (ts)
      if (!value) {
        newView = firstViewId;
        currentViewValue = newView.toString();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/data-table-toolbar.svelte:90:11
Error: Type 'number | undefined' is not assignable to type 'number'.
  Type 'undefined' is not assignable to type 'number'. (ts)
        if (!value) {
          newView = firstViewId;
          currentViewValue = newView.toString();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/server-data-table.svelte:187:29
Error: Type '{ content: ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>> | undefined; context: HeaderContext<TransactionsFormat, unknown>; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'content' are incompatible.
    Type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>> | undefined' is not assignable to type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>>'.
      Type 'undefined' is not assignable to type 'ColumnDefTemplate<HeaderContext<TransactionsFormat, unknown>>'. (ts)
                {#if !header.isPlaceholder}
                  <FlexRender
                    content={header.column.columnDef.header}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/server-data-table.svelte:215:29
Error: Type '{ content: ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined; context: CellContext<TransactionsFormat, unknown>; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'content' are incompatible.
    Type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>> | undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'.
      Type 'undefined' is not assignable to type 'ColumnDefTemplate<CellContext<TransactionsFormat, unknown>>'. (ts)
                <Table.Cell>
                  <FlexRender
                    content={cell.column.columnDef.cell}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/add-transaction-dialog.svelte:119:20
Error: Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type 'SelectRootPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ disabled?: boolean; required?: boolean; name?: string; open?: boolean; onOpenChange?: OnChangeFn<boolean>; onOpenChangeComplete?: OnChangeFn<boolean>; loop?: boolean; scrollAlignment?: "center" | "nearest"; items?: { ...; }[]; allowDeselect?: boolean; autocomplete?: FullAutoFill | ... 1 more ... | undefined; } & {...' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type 'SelectSingleRootPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Types of property 'value' are incompatible.
        Type 'string | undefined' is not assignable to type 'string'.
          Type 'undefined' is not assignable to type 'string'. (ts)
        <Label for="payee">Payee</Label>
        <Select.Root
          type="single"

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/add-transaction-dialog.svelte:141:20
Error: Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type 'SelectRootPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type '{ disabled?: boolean; required?: boolean; name?: string; open?: boolean; onOpenChange?: OnChangeFn<boolean>; onOpenChangeComplete?: OnChangeFn<boolean>; loop?: boolean; scrollAlignment?: "center" | "nearest"; items?: { ...; }[]; allowDeselect?: boolean; autocomplete?: FullAutoFill | ... 1 more ... | undefined; } & {...' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
    Type '{ children: () => any; type: "single"; value: string | undefined; onValueChange: (value: string) => void; }' is not assignable to type 'SelectSingleRootPropsWithoutHTML' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
      Types of property 'value' are incompatible.
        Type 'string | undefined' is not assignable to type 'string'.
          Type 'undefined' is not assignable to type 'string'. (ts)
        <Label for="category">Category</Label>
        <Select.Root
          type="single"

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/add-transaction-dialog.svelte:165:11
Error: Type '"cleared" | "pending" | "scheduled" | null' is not assignable to type 'string | undefined'.
  Type 'null' is not assignable to type 'string | undefined'. (ts)
          type="single"
          value={transactionForm.status}
          onValueChange={(value) => {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/transaction-table-container.svelte:9:43
Error: Cannot find module '$lib/states/entities/server-account.svelte' or its corresponding type declarations. (ts)
  import { DataTable, ServerDataTableToolbar, ServerDataTablePagination } from '.';
  import type { ServerAccountState } from '$lib/states/entities/server-account.svelte';

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/transaction-table-container.svelte:96:14
Error: Type 'string' is not assignable to type 'number'. (ts)
            accountState={serverAccountState}
            {accountId}
          />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/transaction-table-container.svelte:230:12
Error: Type 'string' is not assignable to type 'number'. (ts)
          accountState={serverAccountState}
          {accountId}
        />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/transaction-table-container.svelte:244:17
Error: Cannot invoke an object which is possibly 'undefined'. (ts)
                pagination.page = Math.max(0, pagination.page - 1);
                loadData();
              }}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/transaction-table-container.svelte:259:17
Error: Cannot invoke an object which is possibly 'undefined'. (ts)
                pagination.page = Math.min(pagination.totalPages - 1, pagination.page + 1);
                loadData();
              }}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/cash-flow-chart.svelte:8:26
Error: Could not find a declaration file for module 'd3-array'. '/Users/robert/Projects/JS/SvelteKit/budget/node_modules/d3-array/src/index.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/d3-array` if it exists or add a new declaration (.d.ts) file containing `declare module 'd3-array';` (ts)
  import { dateValueToJSDate } from '$lib/utils/dates';
  import { extent } from 'd3-array';
  import { createCashFlowProcessor } from '../(analytics)/data-processors.svelte';

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/cash-flow-chart.svelte:51:39
Error: Parameter 'd' implicitly has an 'any' type. (ts)
    // Calculate data extents
    const xExtent = extent(chartData, d => d.x) as [Date, Date];
    const yExtent = extent(chartData, d => d.y) as [number, number];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/cash-flow-chart.svelte:52:39
Error: Parameter 'd' implicitly has an 'any' type. (ts)
    const xExtent = extent(chartData, d => d.x) as [Date, Date];
    const yExtent = extent(chartData, d => d.y) as [number, number];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/cash-flow-chart.svelte:88:7
Error: Type '{ title: string; nice: false; domain: [number, number] | undefined; }' is not assignable to type 'AxisConfig' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'domain' are incompatible.
    Type '[number, number] | undefined' is not assignable to type '[number | null, number | null]'.
      Type 'undefined' is not assignable to type '[number | null, number | null]'. (ts)
      },
      y: {
        title: 'Net Cash Flow',

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/top-payees-chart.svelte:60:9
Error: Object literal may only specify known properties, and 'position' does not exist in type 'LabelConfig'. (ts)
        format: chartFormatters.currencySmart,
        position: 'auto',
        class: 'fill-foreground text-xs font-medium'

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(cells)/data-table-editable-date-cell.svelte:30:10
Error: Type '{ value: DateValue | undefined; handleSubmit: (new_value: DateValue | DateValue[] | undefined) => void; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'DateValue | undefined' is not assignable to type 'DateValue'.
      Type 'undefined' is not assignable to type 'DateValue'. (ts)

<DateInput bind:value {handleSubmit} />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(cells)/data-table-editable-numeric-cell.svelte:19:20
Error: Type 'number | undefined' is not assignable to type 'number'.
  Type 'undefined' is not assignable to type 'number'. (ts)

<NumericInput bind:value={value} onSubmit={handleSubmit} bind:open />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(cells)/editable-date-cell.svelte:20:10
Error: Type '{ value: DateValue | undefined; handleSubmit: (new_value: DateValue | undefined) => void; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'DateValue | undefined' is not assignable to type 'DateValue'.
      Type 'undefined' is not assignable to type 'DateValue'. (ts)

<DateInput bind:value {handleSubmit} />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(cells)/editable-entity-cell.svelte:32:12
Error: Type '{ entityLabel: string; value: EditableEntityItem | undefined; entities: EditableEntityItem[]; icon: ComponentType<{}, {}, string>; handleSubmit: (entity?: EditableEntityItem) => void; management: { ...; }; }' is not assignable to type 'Props' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'value' are incompatible.
    Type 'EditableEntityItem | undefined' is not assignable to type 'EditableEntityItem'.
      Type 'undefined' is not assignable to type 'EditableEntityItem'. (ts)

<EntityInput bind:entityLabel bind:value bind:entities {icon} {handleSubmit} {management} />

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-amount.svelte:166:12
Error: Object is possibly 'undefined'. (ts)
        >
          {activeOperator().label}
        </Button>

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-amount.svelte:178:15
Error: Object is possibly 'undefined'. (ts)
              "w-full justify-start",
              activeOperator().value === type.value && "bg-accent"
            )}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-category.svelte:19:33
Error: Property 'account' comes from an index signature, so it must be accessed with ['account']. (ts)
  const { data } = $derived(page);
  const account = $derived(data.account);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-category.svelte:30:39
Error: Property 'categories' comes from an index signature, so it must be accessed with ['categories']. (ts)
  );
  const allCategories = $derived(data.categories);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-date.svelte:43:26
Error: Argument of type 'unknown' is not assignable to parameter of type 'string'. (ts)
      for (const selectedValue of selectedValues) {
        if (!options.has(selectedValue) && typeof selectedValue === 'string') {
          // Create a fallback option for selected values not found in allDates

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-date.svelte:45:38
Error: Argument of type '{ value: string; label: string; icon: undefined; }' is not assignable to parameter of type 'FacetedFilterOption' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'icon' are incompatible.
    Type 'undefined' is not assignable to type 'Component<{}, {}, string>'. (ts)
          // Create a fallback option for selected values not found in allDates
          options.set(selectedValue, {
            value: selectedValue,
            label: selectedValue, // Could be improved with better formatting
            icon: undefined
          });
        }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-payee.svelte:19:33
Error: Property 'account' comes from an index signature, so it must be accessed with ['account']. (ts)
  const { data } = $derived(page);
  const account = $derived(data.account);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-payee.svelte:28:35
Error: Property 'payees' comes from an index signature, so it must be accessed with ['payees']. (ts)
  );
  const allPayees = $derived(data.payees);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(facets)/data-table-faceted-filter-status.svelte:20:33
Error: Property 'account' comes from an index signature, so it must be accessed with ['account']. (ts)
  const { data } = $derived(page);
  const account = $derived(data.account);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/categories/+page.server.ts:13:39
Error: Argument of type 'ZodObject<{ id: ZodNumber; }, $strip>' is not assignable to parameter of type 'ZodObjectType'.
  Type 'ZodObject<{ id: ZodNumber; }, $strip>' is missing the following properties from type 'ZodType<Record<string, unknown>, ZodTypeDef, Record<string, unknown> | undefined>': _type, _parse, _getType, _getOrReturnCtx, and 7 more. 
  form: await superValidate(zod4(superformInsertCategorySchema)),
  deleteForm: await superValidate(zod(removeCategorySchema)),
});

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/categories/+page.server.ts:32:49
Error: Argument of type 'ZodObject<{ id: ZodNumber; }, $strip>' is not assignable to parameter of type 'ZodObjectType'.
  Type 'ZodObject<{ id: ZodNumber; }, $strip>' is missing the following properties from type 'ZodType<Record<string, unknown>, ZodTypeDef, Record<string, unknown> | undefined>': _type, _parse, _getType, _getOrReturnCtx, and 7 more. 
  "delete-category": async (event) => {
    const form = await superValidate(event, zod(removeCategorySchema));
    if (!form.valid) {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/categories/+page.server.ts:39:71
Error: Argument of type 'Record<string, unknown>' is not assignable to parameter of type '{ id: number; }'.
  Property 'id' is missing in type 'Record<string, unknown>' but required in type '{ id: number; }'. 

    await createCaller(await createContext()).categoriesRoutes.remove(form.data);
    return {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/lib/components/Menu.svelte:3:28
Error: Cannot find module './ui/menubar' or its corresponding type declarations. (ts)
  import * as Dialog from "./ui/dialog";
  import * as Menubar from "./ui/menubar";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:77:25
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. (ts)
        id: t.id ?? '',
        date: parseDate(datePart),
        amount: t.amount,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:309:22
Error: This comparison appears to be unintentional because the types 'number' and 'string | undefined' have no overlap. (ts)
  $effect(() => {
    if (accountId && accountId !== previousAccountId) {
      pagination.page = 0;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:312:7
Error: Type 'number' is not assignable to type 'string'. (ts)
      filters.searchQuery = '';
      previousAccountId = accountId;
      loadData();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:408:10
Error: Type '{ searchQuery: string; sortBy: "date"; sortOrder: "desc"; dateFrom: undefined; dateTo: undefined; }' is not assignable to type '{ searchQuery: string; dateFrom: string | null; dateTo: string | null; sortBy: string; sortOrder: "asc" | "desc"; }'.
  Types of property 'dateFrom' are incompatible.
    Type 'undefined' is not assignable to type 'string | null'. (ts)
        {transactions}
        {filters}
        {pagination}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:412:10
Error: Type 'number' is not assignable to type 'string'. (ts)
        {serverAccountState}
        {accountId}
        {categoriesState}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:418:26
Error: Type '() => { id: number; date: string; amount: number; notes: string; status: "cleared" | "pending" | "scheduled" | null; payee: { id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; } | null; category: { ...; } | null; }[]' is not assignable to type 'any[]'. (ts)
        formattedTransactions={formattedTransactions}
        simpleFormatted={simpleFormatted}
        {updateTransactionData}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:428:10
Error: Type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }[]' is not assignable to type '{ id: number; name: string; }[]'.
  Type '{ id: number; name: string | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }' is not assignable to type '{ id: number; name: string; }'.
    Types of property 'name' are incompatible.
      Type 'string | null' is not assignable to type 'string'.
        Type 'null' is not assignable to type 'string'. (ts)
        {account}
        {payees}
        {categories}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:429:10
Error: Type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }[]' is not assignable to type '{ id: number; name: string; }[]'.
  Type '{ id: number; name: string | null; parentId: number | null; notes: string | null; dateCreated: string; createdAt: string; updatedAt: string; deletedAt: string | null; }' is not assignable to type '{ id: number; name: string; }'.
    Types of property 'name' are incompatible.
      Type 'string | null' is not assignable to type 'string'.
        Type 'null' is not assignable to type 'string'. (ts)
        {payees}
        {categories}
        onSubmit={submitTransaction}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/+page.svelte:437:67
Error: Type 'number' is not assignable to type 'string'. (ts)
      {#if transactions && !isLoading && activeTab === 'analytics'}
        <AnalyticsDashboard transactions={formattedTransactions} {accountId} />
      {:else if isLoading}

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/income-expenses-comparison-chart.svelte:101:24
Error: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'. (ts)
            styling={{
              colors: [chartColors()[0]],
              legend: { show: false }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/src/routes/accounts/[id]/(components)/(charts)/income-expenses-comparison-chart.svelte:140:24
Error: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'. (ts)
            styling={{
              colors: [chartColors()[1]],
              legend: { show: false }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/hydration-check.spec.ts:90:60
Error: Object literal may only specify known properties, and 'ignoreCase' does not exist in type '{ exact?: boolean; }'. 
      // Verify the page is accessible and not showing an error state
      const hasErrorText = await page.getByText('error', { ignoreCase: true }).count();
      const has404Text = await page.getByText('404', { ignoreCase: true }).count();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/hydration-check.spec.ts:91:56
Error: Object literal may only specify known properties, and 'ignoreCase' does not exist in type '{ exact?: boolean; }'. 
      const hasErrorText = await page.getByText('error', { ignoreCase: true }).count();
      const has404Text = await page.getByText('404', { ignoreCase: true }).count();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/test-helpers.ts:166:20
Error: Cannot find name 'vi'. 
  ): MockedFunction<T> {
    const mockFn = vi.fn() as MockedFunction<T>;
    returnValues.forEach(value => mockFn.mockReturnValueOnce(value));

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/test-helpers.ts:179:20
Error: Cannot find name 'vi'. 
  ): MockedFunction<T> {
    const mockFn = vi.fn() as MockedFunction<T>;
    let callCount = 0;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/test-helpers.ts:200:20
Error: Cannot find name 'vi'. 
  ): MockedFunction<T> {
    const mockFn = vi.fn() as MockedFunction<T>;
    mockFn.mockImplementation(async () => {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/test-helpers.ts:201:31
Error: Argument of type '() => Promise<ReturnType<T>>' is not assignable to parameter of type 'NormalizedProcedure<T>'.
  Type 'Promise<ReturnType<T>>' is not assignable to type 'ReturnType<T>'. 
    const mockFn = vi.fn() as MockedFunction<T>;
    mockFn.mockImplementation(async () => {
      await new Promise(resolve => setTimeout(resolve, delayMs));

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/test-helpers.ts:383:12
Error: 'lastResult' is possibly 'undefined'. 
    const lastResult = results[maxRequests];
    expect(lastResult.status, "Rate limit should block extra request").toBe("rejected");
  }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:145:16
Error: Cannot find name 'vi'. 
    const mockObserver = {
      observe: vi.fn(),
      disconnect: vi.fn(),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:146:19
Error: Cannot find name 'vi'. 
      observe: vi.fn(),
      disconnect: vi.fn(),
      unobserve: vi.fn(),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:147:18
Error: Cannot find name 'vi'. 
      disconnect: vi.fn(),
      unobserve: vi.fn(),
    };

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:152:38
Error: Cannot find name 'vi'. 
    
    const MockIntersectionObserver = vi.fn().mockImplementation((cb) => {
      callback = cb;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:152:66
Error: Parameter 'cb' implicitly has an 'any' type. 
    
    const MockIntersectionObserver = vi.fn().mockImplementation((cb) => {
      callback = cb;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:315:21
Error: Cannot find name 'vi'. 
  ): void {
    const cleanup = vi.fn();
    const effect = setupEffect();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/utils/component-helpers.ts:320:25
Error: Cannot find name 'vi'. 
    const originalCleanup = effect;
    const mockCleanup = vi.fn(originalCleanup);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/examples/advanced-test-patterns.test.ts:327:19
Error: Type 'unknown' is not assignable to type 'null'. 
      const store = ComponentTestHelpers.createMockStore({ selectedAccount: null });
      store.set({ selectedAccount: singleAccount });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/test-db.ts:82:18
Error: Object is possibly 'undefined'. 
    {
      accountId: testAccounts[0].id,
      amount: -50.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/test-db.ts:88:18
Error: Object is possibly 'undefined'. 
    {
      accountId: testAccounts[0].id,
      amount: 100.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:101:14
Error: 'firstAccount' is possibly 'undefined'. 
      const firstAccount = accounts[0];
      expect(firstAccount.name).toBeDefined();
      expect(firstAccount.id).toBeDefined();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:102:14
Error: 'firstAccount' is possibly 'undefined'. 
      expect(firstAccount.name).toBeDefined();
      expect(firstAccount.id).toBeDefined();
      expect(firstAccount.createdAt).toBeDefined();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:103:14
Error: 'firstAccount' is possibly 'undefined'. 
      expect(firstAccount.id).toBeDefined();
      expect(firstAccount.createdAt).toBeDefined();
      expect(firstAccount.balance).toBeDefined();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:104:14
Error: 'firstAccount' is possibly 'undefined'. 
      expect(firstAccount.createdAt).toBeDefined();
      expect(firstAccount.balance).toBeDefined();
      expect(firstAccount.transactions).toBeDefined();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:105:14
Error: 'firstAccount' is possibly 'undefined'. 
      expect(firstAccount.balance).toBeDefined();
      expect(firstAccount.transactions).toBeDefined();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:112:14
Error: 'firstAccount' is possibly 'undefined'. 
      
      expect(firstAccount.balance).toBeDefined();
      expect(typeof firstAccount.balance).toBe("number");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:113:21
Error: 'firstAccount' is possibly 'undefined'. 
      expect(firstAccount.balance).toBeDefined();
      expect(typeof firstAccount.balance).toBe("number");
      // Should have transactions from seed data

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:115:14
Error: 'firstAccount' is possibly 'undefined'. 
      // Should have transactions from seed data
      expect(firstAccount.transactions.length).toBeGreaterThan(0);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:137:14
Error: Object is possibly 'undefined'. 
      expect(accounts1.length).toBe(accounts2.length);
      expect(accounts1[0].id).toBe(accounts2[0].id);
      expect(accounts1[0].name).toBe(accounts2[0].name);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:137:36
Error: Object is possibly 'undefined'. 
      expect(accounts1.length).toBe(accounts2.length);
      expect(accounts1[0].id).toBe(accounts2[0].id);
      expect(accounts1[0].name).toBe(accounts2[0].name);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:138:14
Error: Object is possibly 'undefined'. 
      expect(accounts1[0].id).toBe(accounts2[0].id);
      expect(accounts1[0].name).toBe(accounts2[0].name);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:138:38
Error: Object is possibly 'undefined'. 
      expect(accounts1[0].id).toBe(accounts2[0].id);
      expect(accounts1[0].name).toBe(accounts2[0].name);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:148:13
Error: 'firstAccount' is possibly 'undefined'. 
      const updated = await caller.accountRoutes.save({
        id: firstAccount.id,
        name: "Updated Account Name",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:153:31
Error: 'firstAccount' is possibly 'undefined'. 
      
      expect(updated.id).toBe(firstAccount.id);
      expect(updated.name).toBe("Updated Account Name");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:162:28
Error: 'firstAccount' is possibly 'undefined'. 
      const firstAccount = accounts[0];
      const originalName = firstAccount.name;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:165:13
Error: 'firstAccount' is possibly 'undefined'. 
      const updated = await caller.accountRoutes.save({
        id: firstAccount.id,
        name: originalName,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:170:31
Error: 'firstAccount' is possibly 'undefined'. 
      
      expect(updated.id).toBe(firstAccount.id);
      expect(updated.name).toBe(originalName); // Should remain unchanged

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:181:13
Error: 'firstAccount' is possibly 'undefined'. 
      await expect(caller.accountRoutes.save({
        id: firstAccount.id,
        name: "",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:187:13
Error: 'firstAccount' is possibly 'undefined'. 
      await expect(caller.accountRoutes.save({
        id: firstAccount.id,
        name: "Invalid<script>Name",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:207:13
Error: 'accountToDelete' is possibly 'undefined'. 
      const result = await caller.accountRoutes.remove({ 
        id: accountToDelete.id 
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:211:30
Error: 'accountToDelete' is possibly 'undefined'. 
      expect(result.deletedAt).toBeDefined();
      expect(result.id).toBe(accountToDelete.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/crud/accounts.test.ts:216:49
Error: 'accountToDelete' is possibly 'undefined'. 
      expect(updatedAccounts.length).toBe(initialCount - 1);
      expect(updatedAccounts.find(a => a.id === accountToDelete.id)).toBeUndefined();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/test-db-node.ts:1:22
Error: Cannot find module 'better-sqlite3' or its corresponding type declarations. 
import Database from "better-sqlite3";
import { drizzle } from "drizzle-orm/better-sqlite3";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/test-db-node.ts:81:18
Error: Object is possibly 'undefined'. 
    {
      accountId: testAccounts[0].id,
      amount: -50.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/test-db-node.ts:87:18
Error: Object is possibly 'undefined'. 
    {
      accountId: testAccounts[0].id,
      amount: 100.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/navigation/filter-url-persistence.test.ts:74:44
Error: Object is possibly 'undefined'. 
        // URL should contain some filter-related parameters
        expect(url.length).toBeGreaterThan(page.url().split('?')[0].length);
      }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:23:7
Error: Object literal may only specify known properties, and 'slug' does not exist in type '{ name: string | null; id?: number | undefined; notes?: string | null | undefined; dateCreated?: string | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; deletedAt?: string | ... 1 more ... | undefined; }'. 
      name: "Schedule Date Test Payee",
      slug: "schedule-date-test-payee",
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:236:43
Error: Argument of type 'string' is not assignable to parameter of type '"exact" | "approximate" | "range"'. 

        expect(schedule.amount_type).toBe(config.type);
        expect(schedule.amount).toBe(config.amount);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:328:14
Error: 'scheduleA' is possibly 'undefined'. 
      const [scheduleA, scheduleB, allSchedules] = results;
      expect(scheduleA.name).toBe("Concurrent Schedule A");
      expect(scheduleB.name).toBe("Concurrent Schedule B");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:328:24
Error: Property 'name' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; } | ...'.
  Property 'name' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }[]'. 
      const [scheduleA, scheduleB, allSchedules] = results;
      expect(scheduleA.name).toBe("Concurrent Schedule A");
      expect(scheduleB.name).toBe("Concurrent Schedule B");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:329:14
Error: 'scheduleB' is possibly 'undefined'. 
      expect(scheduleA.name).toBe("Concurrent Schedule A");
      expect(scheduleB.name).toBe("Concurrent Schedule B");
      expect(allSchedules.length).toBeGreaterThanOrEqual(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:329:24
Error: Property 'name' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; } | ...'.
  Property 'name' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }[]'. 
      expect(scheduleA.name).toBe("Concurrent Schedule A");
      expect(scheduleB.name).toBe("Concurrent Schedule B");
      expect(allSchedules.length).toBeGreaterThanOrEqual(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:330:14
Error: 'allSchedules' is possibly 'undefined'. 
      expect(scheduleB.name).toBe("Concurrent Schedule B");
      expect(allSchedules.length).toBeGreaterThanOrEqual(2);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/schedule-date-integration.test.ts:330:27
Error: Property 'length' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; } | ...'.
  Property 'length' does not exist on type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }'. 
      expect(scheduleB.name).toBe("Concurrent Schedule B");
      expect(allSchedules.length).toBeGreaterThanOrEqual(2);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:24:7
Error: Object literal may only specify known properties, and 'slug' does not exist in type '{ name: string | null; id?: number | undefined; notes?: string | null | undefined; dateCreated?: string | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; deletedAt?: string | ... 1 more ... | undefined; }'. 
      name: "Transaction Gen Test Payee",
      slug: "transaction-gen-test-payee",
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:30:7
Error: Object literal may only specify known properties, and 'slug' does not exist in type '{ name: string | null; id?: number | undefined; parentId?: number | null | undefined; notes?: string | null | undefined; dateCreated?: string | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; deletedAt?: string | ... 1 more ... | undefined; }'. 
      name: "Transaction Gen Test Category",
      slug: "transaction-gen-test-category",
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:95:39
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
        expect(transaction.status).toBe("scheduled");
        expect(transaction.date).toBe(dates[index]);
        expect(transaction.accountId).toBe(testAccountId);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:132:43
Error: Argument of type 'string' is not assignable to parameter of type '"exact" | "approximate" | "range"'. 
        expect(schedule.amount).toBe(config.amount);
        expect(schedule.amount_type).toBe(config.type);
      }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:425:41
Error: Argument of type 'string | undefined' is not assignable to parameter of type '"cleared" | "pending" | "scheduled" | null'.
  Type 'undefined' is not assignable to type '"cleared" | "pending" | "scheduled" | null'. 
      transactions.forEach((transaction, index) => {
        expect(transaction.status).toBe(statuses[index]);
        expect(transaction.amount).toBe(275.00);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:541:14
Error: Object is possibly 'undefined'. 
      expect(transactions.length).toBe(2);
      expect(transactions[0].amount).toBe(100.00);
      expect(transactions[1].amount).toBe(200.00);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:542:14
Error: Object is possibly 'undefined'. 
      expect(transactions[0].amount).toBe(100.00);
      expect(transactions[1].amount).toBe(200.00);
      expect(transactions[0].status).toBe("scheduled");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:543:14
Error: Object is possibly 'undefined'. 
      expect(transactions[1].amount).toBe(200.00);
      expect(transactions[0].status).toBe("scheduled");
      expect(transactions[1].status).toBe("scheduled");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:544:14
Error: Object is possibly 'undefined'. 
      expect(transactions[0].status).toBe("scheduled");
      expect(transactions[1].status).toBe("scheduled");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/schedules/transaction-generation.test.ts:581:39
Error: Argument of type '{ payeeId: number; amount: number; status: "scheduled"; date: string; }' is not assignable to parameter of type '{ accountId: number; amount: number; id?: number | undefined; parentId?: number | null | undefined; status?: "cleared" | "pending" | "scheduled" | null | undefined; payeeId?: number | null | undefined; ... 6 more ...; deletedAt?: string | ... 1 more ... | undefined; }'.
  Property 'accountId' is missing in type '{ payeeId: number; amount: number; status: "scheduled"; date: string; }' but required in type '{ accountId: number; amount: number; id?: number | undefined; parentId?: number | null | undefined; status?: "cleared" | "pending" | "scheduled" | null | undefined; payeeId?: number | null | undefined; ... 6 more ...; deletedAt?: string | ... 1 more ... | undefined; }'. 
      expect(
        caller.transactionRoutes.save({
          payeeId: testPayeeId,
          amount: 125.00,
          status: "scheduled",
          date: "2024-11-01",
        })
      ).rejects.toThrow();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/security/rate-limiting.test.ts:157:13
Error: Object is possibly 'undefined'. 
      const updateResult = await callerWithoutRateLimit.accountRoutes.save({
        id: accounts[0].id,
        name: accounts[0].name,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/security/rate-limiting.test.ts:158:15
Error: Object is possibly 'undefined'. 
        id: accounts[0].id,
        name: accounts[0].name,
        notes: "Updated notes",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/vitest-setup.ts:7:15
Error: Property 'DATABASE_URL' comes from an index signature, so it must be accessed with ['DATABASE_URL']. 
  process.env.NODE_ENV = "test";
  process.env.DATABASE_URL = ":memory:";
  process.env.DATABASE_LOG_QUERIES = "false";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/setup/vitest-setup.ts:8:15
Error: Property 'DATABASE_LOG_QUERIES' comes from an index signature, so it must be accessed with ['DATABASE_LOG_QUERIES']. 
  process.env.DATABASE_URL = ":memory:";
  process.env.DATABASE_LOG_QUERIES = "false";

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:29:47
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'type' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]'. 
    // Create test fixtures
    [testAccount] = await db.insert(accounts).values({
      name: "Optimized Test Account",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:72:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 

      const summary = await caller.optimizedAccountsRoutes.loadSummary({ 
        id: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:86:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should handle account with no transactions", async () => {
      const summary = await caller.optimizedAccountsRoutes.loadSummary({ 
        id: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:96:16
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
      await expect(
        caller.optimizedAccountsRoutes.loadSummary({ id: 99999 })
      ).rejects.toThrow("Account not found");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:102:37
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
      const startTime1 = performance.now();
      const summary1 = await caller.optimizedAccountsRoutes.loadSummary({ 
        id: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:108:37
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
      const startTime2 = performance.now();
      const summary2 = await caller.optimizedAccountsRoutes.loadSummary({ 
        id: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:122:57
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'type' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]'. 
      // Create additional test account
      const [secondAccount] = await db.insert(accounts).values({
        name: "Second Account",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:139:22
Error: 'secondAccount' is possibly 'undefined'. 
        {
          accountId: secondAccount.id,
          amount: 100.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:148:38
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 

      const summaries = await caller.optimizedAccountsRoutes.loadAllSummaries();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:152:50
Error: Parameter 'a' implicitly has an 'any' type. 
      
      const firstAccountSummary = summaries.find(a => a.id === testAccount.id);
      const secondAccountSummary = summaries.find(a => a.id === secondAccount.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:153:51
Error: Parameter 'a' implicitly has an 'any' type. 
      const firstAccountSummary = summaries.find(a => a.id === testAccount.id);
      const secondAccountSummary = summaries.find(a => a.id === secondAccount.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:153:65
Error: 'secondAccount' is possibly 'undefined'. 
      const firstAccountSummary = summaries.find(a => a.id === testAccount.id);
      const secondAccountSummary = summaries.find(a => a.id === secondAccount.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:162:25
Error: Parameter 'summary' implicitly has an 'any' type. 
      // Should NOT include transactions arrays
      summaries.forEach(summary => {
        expect(summary).not.toHaveProperty("transactions");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:168:38
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should handle accounts with no transactions", async () => {
      const summaries = await caller.optimizedAccountsRoutes.loadAllSummaries();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:196:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should load first page of transactions", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:212:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should load second page of transactions", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:225:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should load last page of transactions", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:238:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should sort transactions by different fields", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:248:47
Error: Parameter 't' implicitly has an 'any' type. 
      // Check that amounts are in ascending order
      const amounts = result.transactions.map(t => t.amount);
      expect(amounts[0]).toBeLessThan(amounts[1]);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:254:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should calculate running balance for first page chronological", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:268:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should not calculate running balance for non-chronological pages", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:276:35
Error: Parameter 'transaction' implicitly has an 'any' type. 

      result.transactions.forEach(transaction => {
        expect(transaction.balance).toBeNull();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:314:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should search transactions by notes", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:325:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should search transactions by amount", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:335:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should filter transactions by date range", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:345:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should combine search and date filtering", async () => {
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:375:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 

      const recent = await caller.optimizedAccountsRoutes.loadRecentTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:412:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 

      const recent = await caller.optimizedAccountsRoutes.loadRecentTransactions({
        accountId: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:452:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should group balance history by day", async () => {
      const history = await caller.optimizedAccountsRoutes.getBalanceHistory({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:459:33
Error: Parameter 'h' implicitly has an 'any' type. 
      
      const day1 = history.find(h => h.period === "2024-01-01");
      const day2 = history.find(h => h.period === "2024-01-02");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:460:33
Error: Parameter 'h' implicitly has an 'any' type. 
      const day1 = history.find(h => h.period === "2024-01-01");
      const day2 = history.find(h => h.period === "2024-01-02");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:470:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should filter balance history by date range", async () => {
      const history = await caller.optimizedAccountsRoutes.getBalanceHistory({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:483:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
    test("should group balance history by month", async () => {
      const history = await caller.optimizedAccountsRoutes.getBalanceHistory({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:518:35
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
      const startTime = performance.now();
      const result = await caller.optimizedAccountsRoutes.loadTransactions({
        accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-optimized-endpoints.test.ts:551:36
Error: Property 'optimizedAccountsRoutes' does not exist on type 'DecoratedProcedureRecord<{ accountRoutes: CreateRouterInner<RootConfig<{ ctx: Context; meta: object; errorShape: DefaultErrorShape; transformer: DefaultDataTransformer; }>, { ...; }>; ... 5 more ...; viewsRoutes: CreateRouterInner<...>; }> & { ...; }'. 
      const summaryStart = performance.now();
      const summary = await caller.optimizedAccountsRoutes.loadSummary({ 
        id: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-performance.test.ts:25:47
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'type' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; slug: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; ... 6 more ...; dateOpened?: string | ... 2 more ... | undefined; }[]'. 
    // Create test fixtures
    [testAccount] = await db.insert(accounts).values({
      name: "Test Account",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-performance.test.ts:183:14
Error: Object is possibly 'undefined'. 
      expect(groceryTransactions).toHaveLength(2);
      expect(groceryTransactions[0].notes).toContain('Grocery');
      expect(groceryTransactions[1].notes).toContain('Grocery');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts-performance.test.ts:184:14
Error: Object is possibly 'undefined'. 
      expect(groceryTransactions[0].notes).toContain('Grocery');
      expect(groceryTransactions[1].notes).toContain('Grocery');
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:37:15
Error: Object is possibly 'undefined'. 
        expect.objectContaining({
          id: accounts[0].id,
          name: "Test Checking",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:46:14
Error: Object is possibly 'undefined'. 
      // Should include transactions with all fields
      expect(result[0].transactions[0]).toEqual(
        expect.objectContaining({

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:63:47
Error: Object is possibly 'undefined'. 
      // Delete one account
      await caller.accountRoutes.remove({ id: accounts[0].id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:67:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(1);
      expect(result[0].id).toBe(accounts[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:67:33
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(1);
      expect(result[0].id).toBe(accounts[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:81:14
Error: Object is possibly 'undefined'. 
      
      expect(result[0].name).toBe("AAA First Account");
      expect(result[1].name).toBe("Test Checking");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:82:14
Error: Object is possibly 'undefined'. 
      expect(result[0].name).toBe("AAA First Account");
      expect(result[1].name).toBe("Test Checking");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:90:60
Error: Object is possibly 'undefined'. 
      
      const result = await caller.accountRoutes.load({ id: accounts[0].id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:94:15
Error: Object is possibly 'undefined'. 
        expect.objectContaining({
          id: accounts[0].id,
          name: "Test Checking",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:130:47
Error: Object is possibly 'undefined'. 
      // Delete the account
      await caller.accountRoutes.remove({ id: accounts[0].id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:133:41
Error: Object is possibly 'undefined'. 
      await expect(
        caller.accountRoutes.load({ id: accounts[0].id })
      ).rejects.toThrow(TRPCError);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:141:60
Error: Object is possibly 'undefined'. 
      // Test with string ID (should be coerced to number)
      const result = await caller.accountRoutes.load({ id: accounts[0].id.toString() as any });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:143:30
Error: Object is possibly 'undefined'. 
      
      expect(result.id).toBe(accounts[0].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:254:13
Error: 'accountToUpdate' is possibly 'undefined'. 
      const updatedData = {
        id: accountToUpdate.id,
        name: "Updated Account Name",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:263:15
Error: 'accountToUpdate' is possibly 'undefined'. 
        expect.objectContaining({
          id: accountToUpdate.id,
          name: updatedData.name,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:293:28
Error: 'accountToUpdate' is possibly 'undefined'. 
      const accountToUpdate = accounts[0];
      const originalName = accountToUpdate.name;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:297:13
Error: 'accountToUpdate' is possibly 'undefined'. 
      const result = await caller.accountRoutes.save({
        id: accountToUpdate.id,
        notes: "Only notes updated",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:311:62
Error: 'accountToDelete' is possibly 'undefined'. 
      
      const result = await caller.accountRoutes.remove({ id: accountToDelete.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:315:15
Error: 'accountToDelete' is possibly 'undefined'. 
        expect.objectContaining({
          id: accountToDelete.id,
          deletedAt: expect.any(String),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:322:49
Error: 'accountToDelete' is possibly 'undefined'. 
      const allAccounts = await caller.accountRoutes.all();
      expect(allAccounts.find(acc => acc.id === accountToDelete.id)).toBeUndefined();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:355:47
Error: 'accountToDelete' is possibly 'undefined'. 
      
      await caller.accountRoutes.remove({ id: accountToDelete.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:359:54
Error: 'accountToDelete' is possibly 'undefined'. 
      const deletedAccount = await db.query.accounts.findFirst({
        where: (accounts, { eq }) => eq(accounts.id, accountToDelete.id),
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:404:67
Error: 'accountWithTransactions' is possibly 'undefined'. 
      // Verify account has transactions
      const loadedAccount = await caller.accountRoutes.load({ id: accountWithTransactions.id });
      expect(loadedAccount.transactions.length).toBeGreaterThan(0);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:408:47
Error: 'accountWithTransactions' is possibly 'undefined'. 
      // Delete account
      await caller.accountRoutes.remove({ id: accountWithTransactions.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/accounts.test.ts:413:41
Error: 'accountWithTransactions' is possibly 'undefined'. 
      await expect(
        caller.accountRoutes.load({ id: accountWithTransactions.id })
      ).rejects.toThrow(TRPCError);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:73:63
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.categoriesRoutes.load({ id: inserted.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:75:30
Error: 'inserted' is possibly 'undefined'. 
      
      expect(result.id).toBe(inserted.id);
      expect(result.name).toBe("Entertainment");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:90:55
Error: 'inserted' is possibly 'undefined'. 

      await expect(caller.categoriesRoutes.load({ id: inserted.id })).rejects.toThrow("Category not found");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:98:63
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.categoriesRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:99:30
Error: 'inserted' is possibly 'undefined'. 
      const result = await caller.categoriesRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:154:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.categoriesRoutes.save({
          id: existing.id,
          name: "Updated Name",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:159:32
Error: 'existing' is possibly 'undefined'. 

        expect(result.id).toBe(existing.id);
        expect(result.name).toBe("Updated Name");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:164:87
Error: 'existing' is possibly 'undefined'. 
        // Verify in database
        const dbCategory = await db.select().from(categories).where(eq(categories.id, existing.id));
        expect(dbCategory[0].name).toBe("Updated Name");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:165:16
Error: Object is possibly 'undefined'. 
        const dbCategory = await db.select().from(categories).where(eq(categories.id, existing.id));
        expect(dbCategory[0].name).toBe("Updated Name");
        expect(dbCategory[0].notes).toBe("Updated notes");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:166:16
Error: Object is possibly 'undefined'. 
        expect(dbCategory[0].name).toBe("Updated Name");
        expect(dbCategory[0].notes).toBe("Updated notes");
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:176:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.categoriesRoutes.save({
          id: existing.id,
          name: "Updated Category",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:241:65
Error: 'category' is possibly 'undefined'. 

      const result = await caller.categoriesRoutes.remove({ id: category.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:243:30
Error: 'category' is possibly 'undefined'. 
      
      expect(result.id).toBe(category.id);
      expect(result.deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:249:58
Error: 'category' is possibly 'undefined'. 
      const allCategories = await caller.categoriesRoutes.all();
      expect(allCategories.map(c => c.id)).not.toContain(category.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:270:28
Error: Object is possibly 'undefined'. 

      const idsToDelete = [categories1[0].id, categories1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:270:47
Error: Object is possibly 'undefined'. 

      const idsToDelete = [categories1[0].id, categories1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:280:14
Error: Object is possibly 'undefined'. 
      expect(remainingCategories.length).toBe(1);
      expect(remainingCategories[0].id).toBe(categories1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:280:46
Error: Object is possibly 'undefined'. 
      expect(remainingCategories.length).toBe(1);
      expect(remainingCategories[0].id).toBe(categories1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:299:20
Error: 'validCategory' is possibly 'undefined'. 
      const result = await caller.categoriesRoutes.delete({ 
        entities: [validCategory.id, 999] 
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:303:14
Error: Object is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validCategory.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:303:33
Error: 'validCategory' is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validCategory.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:304:14
Error: Object is possibly 'undefined'. 
      expect(result[0].id).toBe(validCategory.id);
      expect(result[0].deletedAt).toBeTruthy();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:321:65
Error: 'category' is possibly 'undefined'. 

      const result = await caller.categoriesRoutes.remove({ id: category.id });
      expect(result.deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:330:72
Error: 'category' is possibly 'undefined'. 

      const result = await caller.categoriesRoutes.delete({ entities: [category.id] });
      expect(result.length).toBe(1);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:344:19
Error: 'parent' is possibly 'undefined'. 
        name: "Child Category",
        parentId: parent.id
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/categories.test.ts:350:36
Error: 'parent' is possibly 'undefined'. 
      
      expect(child?.parentId).toBe(parent.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:72:58
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.payeeRoutes.load({ id: inserted.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:74:30
Error: 'inserted' is possibly 'undefined'. 
      
      expect(result.id).toBe(inserted.id);
      expect(result.name).toBe("Restaurant");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:89:50
Error: 'inserted' is possibly 'undefined'. 

      await expect(caller.payeeRoutes.load({ id: inserted.id })).rejects.toThrow("Payee not found");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:97:58
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.payeeRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:98:30
Error: 'inserted' is possibly 'undefined'. 
      const result = await caller.payeeRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:140:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.payeeRoutes.save({
          id: existing.id,
          name: "Updated Name",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:145:32
Error: 'existing' is possibly 'undefined'. 

        expect(result.id).toBe(existing.id);
        expect(result.name).toBe("Updated Name");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:150:76
Error: 'existing' is possibly 'undefined'. 
        // Verify in database
        const dbPayee = await db.select().from(payees).where(eq(payees.id, existing.id));
        expect(dbPayee[0].name).toBe("Updated Name");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:151:16
Error: Object is possibly 'undefined'. 
        const dbPayee = await db.select().from(payees).where(eq(payees.id, existing.id));
        expect(dbPayee[0].name).toBe("Updated Name");
        expect(dbPayee[0].notes).toBe("Updated notes");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:152:16
Error: Object is possibly 'undefined'. 
        expect(dbPayee[0].name).toBe("Updated Name");
        expect(dbPayee[0].notes).toBe("Updated notes");
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:162:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.payeeRoutes.save({
          id: existing.id,
          name: "Updated Payee",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:249:60
Error: 'payee' is possibly 'undefined'. 

      const result = await caller.payeeRoutes.remove({ id: payee.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:251:30
Error: 'payee' is possibly 'undefined'. 
      
      expect(result.id).toBe(payee.id);
      expect(result.deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:257:54
Error: 'payee' is possibly 'undefined'. 
      const allPayees = await caller.payeeRoutes.all();
      expect(allPayees.map(p => p.id)).not.toContain(payee.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:278:28
Error: Object is possibly 'undefined'. 

      const idsToDelete = [payees1[0].id, payees1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:278:43
Error: Object is possibly 'undefined'. 

      const idsToDelete = [payees1[0].id, payees1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:288:14
Error: Object is possibly 'undefined'. 
      expect(remainingPayees.length).toBe(1);
      expect(remainingPayees[0].id).toBe(payees1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:288:42
Error: Object is possibly 'undefined'. 
      expect(remainingPayees.length).toBe(1);
      expect(remainingPayees[0].id).toBe(payees1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:307:20
Error: 'validPayee' is possibly 'undefined'. 
      const result = await caller.payeeRoutes.delete({ 
        entities: [validPayee.id, 999] 
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:311:14
Error: Object is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validPayee.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:311:33
Error: 'validPayee' is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validPayee.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:312:14
Error: Object is possibly 'undefined'. 
      expect(result[0].id).toBe(validPayee.id);
      expect(result[0].deletedAt).toBeTruthy();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:329:60
Error: 'payee' is possibly 'undefined'. 

      const result = await caller.payeeRoutes.remove({ id: payee.id });
      expect(result.deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/payees.test.ts:338:67
Error: 'payee' is possibly 'undefined'. 

      const result = await caller.payeeRoutes.delete({ entities: [payee.id] });
      expect(result.length).toBe(1);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:73:70
Error: 'transaction' is possibly 'undefined'. 
      // Query using the transaction ID (not account ID as intended)
      const result = await caller.transactionRoutes.forAccount({ id: transaction.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:76:14
Error: Object is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].accountId).toBe(testAccount.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:76:33
Error: 'transaction' is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].accountId).toBe(testAccount.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:77:14
Error: Object is possibly 'undefined'. 
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].accountId).toBe(testAccount.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:90:36
Error: 'transaction' is possibly 'undefined'. 
        .set({ deletedAt: new Date().toISOString() })
        .where(eq(transactions.id, transaction.id));

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:92:70
Error: 'transaction' is possibly 'undefined'. 

      const result = await caller.transactionRoutes.forAccount({ id: transaction.id });
      expect(result).toEqual([]);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:178:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.transactionRoutes.save({
          id: existing.id,
          accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:186:32
Error: 'existing' is possibly 'undefined'. 

        expect(result.id).toBe(existing.id);
        expect(result.amount).toBe(200.50);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:193:94
Error: 'existing' is possibly 'undefined'. 
        // Verify in database
        const dbTransaction = await db.select().from(transactions).where(eq(transactions.id, existing.id));
        expect(dbTransaction[0].amount).toBe(200.50);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:194:16
Error: Object is possibly 'undefined'. 
        const dbTransaction = await db.select().from(transactions).where(eq(transactions.id, existing.id));
        expect(dbTransaction[0].amount).toBe(200.50);
        expect(dbTransaction[0].status).toBe("cleared");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:195:16
Error: Object is possibly 'undefined'. 
        expect(dbTransaction[0].amount).toBe(200.50);
        expect(dbTransaction[0].status).toBe("cleared");
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:205:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.transactionRoutes.save({
          id: existing.id,
          accountId: testAccount.id,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:243:22
Error: 'deletedAccount' is possibly 'undefined'. 
        await expect(caller.transactionRoutes.save({
          accountId: deletedAccount.id,
          amount: 100.00,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:454:20
Error: 'transaction' is possibly 'undefined'. 
      const result = await caller.transactionRoutes.delete({ 
        entities: [transaction.id],
        accountId: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:459:14
Error: Object is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:459:33
Error: 'transaction' is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:460:14
Error: Object is possibly 'undefined'. 
      expect(result[0].id).toBe(transaction.id);
      expect(result[0].deletedAt).toBeTruthy();
      expect(new Date(result[0].deletedAt!).getTime()).toBeCloseTo(new Date().getTime(), -4);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:461:23
Error: Object is possibly 'undefined'. 
      expect(result[0].deletedAt).toBeTruthy();
      expect(new Date(result[0].deletedAt!).getTime()).toBeCloseTo(new Date().getTime(), -4);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:466:36
Error: 'transaction' is possibly 'undefined'. 
      const dbCheck = await db.select().from(transactions)
        .where(eq(transactions.id, transaction.id));
      expect(dbCheck[0].deletedAt).toBeTruthy();

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:467:14
Error: Object is possibly 'undefined'. 
        .where(eq(transactions.id, transaction.id));
      expect(dbCheck[0].deletedAt).toBeTruthy();
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:477:28
Error: Object is possibly 'undefined'. 

      const idsToDelete = [transactions1[0].id, transactions1[2].id];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:477:49
Error: Object is possibly 'undefined'. 

      const idsToDelete = [transactions1[0].id, transactions1[2].id];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:493:14
Error: Object is possibly 'undefined'. 
      expect(activeTransactions.length).toBe(1);
      expect(activeTransactions[0].id).toBe(transactions1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:493:45
Error: Object is possibly 'undefined'. 
      expect(activeTransactions.length).toBe(1);
      expect(activeTransactions[0].id).toBe(transactions1[1].id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/transactions.test.ts:547:20
Error: 'transaction' is possibly 'undefined'. 
      const result = await caller.transactionRoutes.delete({
        entities: [transaction.id],
        accountId: testAccount.id

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:35:30
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Argument of type '({ name: string; description: string; icon: string; } | { name: string; description: string; icon: string; filters: string; } | { name: string; description: null; icon: null; })[]' is not assignable to parameter of type '{ name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplaySta...'.
      Property 'name' is missing in type '({ name: string; description: string; icon: string; } | { name: string; description: string; icon: string; filters: string; } | { name: string; description: null; icon: null; })[]' but required in type '{ name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplaySta...'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'SQL<unknown> | ViewFilter[] | Placeholder<string, any> | null | undefined'. 
      // Create test views
      await db.insert(views).values([
        {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:98:9
Error: No overload matches this call.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplaySta...'. 
      await db.insert(views).values({
        name: "Complex View",
        filters: JSON.stringify(testFilters),

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:106:25
Error: 'view' is possibly 'undefined'. 
      
      expect(JSON.parse(view.filters as string)).toEqual(testFilters);
      expect(JSON.parse(view.display as string)).toEqual(testDisplay);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:106:25
Error: Conversion of type 'ViewFilter[] | null' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ViewFilter[]' is not comparable to type 'string'. 
      
      expect(JSON.parse(view.filters as string)).toEqual(testFilters);
      expect(JSON.parse(view.display as string)).toEqual(testDisplay);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:107:25
Error: 'view' is possibly 'undefined'. 
      expect(JSON.parse(view.filters as string)).toEqual(testFilters);
      expect(JSON.parse(view.display as string)).toEqual(testDisplay);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:107:25
Error: Conversion of type 'ViewDisplayState | null' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ViewDisplayState' is not comparable to type 'string'. 
      expect(JSON.parse(view.filters as string)).toEqual(testFilters);
      expect(JSON.parse(view.display as string)).toEqual(testDisplay);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:119:58
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.load({ id: inserted.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:121:30
Error: 'inserted' is possibly 'undefined'. 
      
      expect(result.id).toBe(inserted.id);
      expect(result.name).toBe("Budget Overview");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:136:58
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:137:30
Error: 'inserted' is possibly 'undefined'. 
      const result = await caller.viewsRoutes.load({ id: inserted.id.toString() as any });
      expect(result.id).toBe(inserted.id);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:146:49
Error: No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }): SQLiteInsertBase<...>', gave the following error.
    Type 'string' is not assignable to type 'SQL<unknown> | ViewFilter[] | Placeholder<string, any> | null | undefined'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<...> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplayState | ... 3 more ... | undefined; dirty?: boolean | ... 3 more ... | undefined; }[]): SQLiteInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; id?: number | SQL<unknown> | Placeholder<string, any> | undefined; description?: string | SQL<unknown> | Placeholder<...> | null | undefined; icon?: string | ... 3 more ... | undefined; filters?: SQL<...> | ... 3 more ... | undefined; display?: ViewDisplaySta...'. 

      const [inserted] = await db.insert(views).values({
        name: "Complex JSON View",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:151:58
Error: 'inserted' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.load({ id: inserted.id });
      expect(JSON.parse(result.filters as string)).toEqual(complexFilters);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:152:25
Error: Conversion of type 'ViewFilter[] | null' to type 'string' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'ViewFilter[]' is not comparable to type 'string'. 
      const result = await caller.viewsRoutes.load({ id: inserted.id });
      expect(JSON.parse(result.filters as string)).toEqual(complexFilters);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:185:11
Error: Type 'boolean' is not assignable to type 'VisibilityState'. 
          expanded: true,
          visibility: true
        };

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:232:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.viewsRoutes.save({
          id: existing.id,
          name: "Updated View",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:238:32
Error: 'existing' is possibly 'undefined'. 

        expect(result.id).toBe(existing.id);
        expect(result.name).toBe("Updated View");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:244:73
Error: 'existing' is possibly 'undefined'. 
        // Verify in database
        const dbView = await db.select().from(views).where(eq(views.id, existing.id));
        expect(dbView[0].name).toBe("Updated View");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:245:16
Error: Object is possibly 'undefined'. 
        const dbView = await db.select().from(views).where(eq(views.id, existing.id));
        expect(dbView[0].name).toBe("Updated View");
        expect(dbView[0].description).toBe("Updated description");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:246:16
Error: Object is possibly 'undefined'. 
        expect(dbView[0].name).toBe("Updated View");
        expect(dbView[0].description).toBe("Updated description");
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:266:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.viewsRoutes.save({
          id: existing.id,
          name: "JSON Update Test",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:276:73
Error: 'existing' is possibly 'undefined'. 
        // Verify in database
        const dbView = await db.select().from(views).where(eq(views.id, existing.id));
        expect(dbView[0].filters).toEqual(newFilters);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:277:16
Error: Object is possibly 'undefined'. 
        const dbView = await db.select().from(views).where(eq(views.id, existing.id));
        expect(dbView[0].filters).toEqual(newFilters);
        expect(dbView[0].display).toEqual(newDisplay);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:278:16
Error: Object is possibly 'undefined'. 
        expect(dbView[0].filters).toEqual(newFilters);
        expect(dbView[0].display).toEqual(newDisplay);
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:289:15
Error: 'existing' is possibly 'undefined'. 
        const result = await caller.viewsRoutes.save({
          id: existing.id,
          name: "Clear Fields Test",

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:400:60
Error: 'view' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.remove({ id: view.id });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:402:30
Error: 'view' is possibly 'undefined'. 
      
      expect(result.id).toBe(view.id);
      expect(result.name).toBe("To Be Deleted");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:407:53
Error: 'view' is possibly 'undefined'. 
      const allViews = await caller.viewsRoutes.all();
      expect(allViews.map(v => v.id)).not.toContain(view.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:409:72
Error: 'view' is possibly 'undefined'. 

      const dbCheck = await db.select().from(views).where(eq(views.id, view.id));
      expect(dbCheck).toEqual([]);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:431:28
Error: Object is possibly 'undefined'. 

      const idsToDelete = [views1[0].id, views1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:431:42
Error: Object is possibly 'undefined'. 

      const idsToDelete = [views1[0].id, views1[2].id]; // Delete first and third

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:441:14
Error: Object is possibly 'undefined'. 
      expect(remainingViews.length).toBe(1);
      expect(remainingViews[0].id).toBe(views1[1].id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:441:41
Error: Object is possibly 'undefined'. 
      expect(remainingViews.length).toBe(1);
      expect(remainingViews[0].id).toBe(views1[1].id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:464:20
Error: 'validView' is possibly 'undefined'. 
      const result = await caller.viewsRoutes.delete({ 
        entities: [validView.id, 999] 
      });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:468:14
Error: Object is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validView.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:468:33
Error: 'validView' is possibly 'undefined'. 
      expect(result.length).toBe(1);
      expect(result[0].id).toBe(validView.id);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:487:60
Error: 'view' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.remove({ id: view.id });
      expect(result.name).toBe("Rate Limited Delete");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:496:67
Error: 'view' is possibly 'undefined'. 

      const result = await caller.viewsRoutes.delete({ entities: [view.id] });
      expect(result.length).toBe(1);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/trpc/views.test.ts:624:9
Error: Type 'boolean' is not assignable to type 'VisibilityState'. 
        expanded: true, // Literal true
        visibility: true // Literal true
      };

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/validation/accounts.test.ts:239:25
Error: Object is possibly 'undefined'. 
        const { accounts } = await seedTestData(db);
        const validId = accounts[0].id;

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/integration/views/individual-account-views.test.ts:95:28
Error: Object is possibly 'undefined'. 
      // Parse the amount to ensure it's a valid number
      const amountString = balanceMatch[1].replace(/,/g, ''); // Remove commas
      const amount = parseFloat(amountString);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:125:14
Error: Object is possibly 'undefined'. 

      expect(results[0].balance).toBe(100.00);
      expect(results[1].balance).toBe(100.00);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:126:14
Error: Object is possibly 'undefined'. 
      expect(results[0].balance).toBe(100.00);
      expect(results[1].balance).toBe(100.00);
      expect(results[2].balance).toBe(50.00);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:127:14
Error: Object is possibly 'undefined'. 
      expect(results[1].balance).toBe(100.00);
      expect(results[2].balance).toBe(50.00);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:167:14
Error: Object is possibly 'undefined'. 

      expect(results[0].balance).toBe(100.00);
      expect(results[1].balance).toBe(100.00); // null -> 0

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:168:14
Error: Object is possibly 'undefined'. 
      expect(results[0].balance).toBe(100.00);
      expect(results[1].balance).toBe(100.00); // null -> 0
      expect(results[2].balance).toBe(100.00); // undefined -> 0

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:169:14
Error: Object is possibly 'undefined'. 
      expect(results[1].balance).toBe(100.00); // null -> 0
      expect(results[2].balance).toBe(100.00); // undefined -> 0
      expect(results[3].balance).toBe(100.00); // NaN -> 0

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:170:14
Error: Object is possibly 'undefined'. 
      expect(results[2].balance).toBe(100.00); // undefined -> 0
      expect(results[3].balance).toBe(100.00); // NaN -> 0
      expect(results[4].balance).toBe(100.00); // "invalid" -> 0

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/balance-calculation.test.ts:171:14
Error: Object is possibly 'undefined'. 
      expect(results[3].balance).toBe(100.00); // NaN -> 0
      expect(results[4].balance).toBe(100.00); // "invalid" -> 0

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/current-account-state.test.ts:240:13
Error: Object is possibly 'undefined'. 
          for (let i = startIndex; i < this._transactions.length; i++) {
            this._transactions[i].balance += amountDifference;
          }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/server-data-table-pagination-logic.test.ts:187:18
Error: Cannot find name 'NavigationCommand'. 
      const canExecuteNavigation = (
        command: NavigationCommand,
        currentPage: number,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/server-data-table-toolbar-logic.test.ts:180:9
Error: Type '{ searchQuery: undefined; dateFrom: undefined; dateTo: undefined; sortBy: string; sortOrder: "desc"; }' is not assignable to type 'FilterState' with 'exactOptionalPropertyTypes: true'. Consider adding 'undefined' to the types of the target's properties.
  Types of property 'searchQuery' are incompatible.
    Type 'undefined' is not assignable to type 'string'. 
      const clearAllFilters = (): FilterState => {
        return {
          searchQuery: undefined,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/models/recurring-date-logic.test.ts:51:14
Error: Object is possibly 'undefined'. 
      expect(generatedDates).toHaveLength(1);
      expect(generatedDates[0].toISOString().split('T')[0]).toBe('2024-01-01');
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/models/recurring-date-logic.test.ts:503:26
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
    const key = date.toISOString().split('T')[0];
    if (!uniqueDates.has(key)) {
      uniqueDates.set(key, date);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/models/recurring-date-logic.test.ts:504:23
Error: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'. 
    if (!uniqueDates.has(key)) {
      uniqueDates.set(key, date);
    }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:45:3
Error: Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
const mockAccounts: Account[] = [
  {
    id: 1,
    name: 'Checking Account',
    balance: 1500,
    dateOpened: '2023-01-15',
    closed: false,
    createdAt: '2023-01-15T10:00:00Z',
    updatedAt: '2023-01-15T10:00:00Z',
  },
  {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:54:3
Error: Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
  },
  {
    id: 2,
    name: 'Savings Account',
    balance: 5000,
    dateOpened: '2022-06-20',
    closed: false,
    createdAt: '2022-06-20T14:30:00Z',
    updatedAt: '2022-06-20T14:30:00Z',
  },
  {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:63:3
Error: Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
  },
  {
    id: 3,
    name: 'Credit Card',
    balance: -800,
    dateOpened: '2023-03-10',
    closed: false,
    createdAt: '2023-03-10T09:15:00Z',
    updatedAt: '2023-03-10T09:15:00Z',
  },
  {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:72:3
Error: Type '{ id: number; name: string; balance: number; dateOpened: string; closed: true; createdAt: string; updatedAt: string; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: string; closed: true; createdAt: string; updatedAt: string; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
  },
  {
    id: 4,
    name: 'Old Account',
    balance: 0,
    dateOpened: '2021-12-01',
    closed: true,
    createdAt: '2021-12-01T16:45:00Z',
    updatedAt: '2023-01-01T12:00:00Z',
  },
  {

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:81:3
Error: Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: string; closed: false; createdAt: string; updatedAt: string; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
  },
  {
    id: 5,
    name: 'Investment Account',
    balance: 10000,
    dateOpened: '2023-05-01',
    closed: false,
    createdAt: '2023-05-01T11:20:00Z',
    updatedAt: '2023-05-01T11:20:00Z',
  },
];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:168:29
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(closedAccounts.length).toBe(1);
      expect(sorted.indexOf(activeAccounts[0])).toBeLessThan(sorted.indexOf(closedAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:168:77
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(closedAccounts.length).toBe(1);
      expect(sorted.indexOf(activeAccounts[0])).toBeLessThan(sorted.indexOf(closedAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:179:29
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(activeAccounts.length).toBe(4);
      expect(sorted.indexOf(closedAccounts[0])).toBeLessThan(sorted.indexOf(activeAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:179:77
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(activeAccounts.length).toBe(4);
      expect(sorted.indexOf(closedAccounts[0])).toBeLessThan(sorted.indexOf(activeAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:212:9
Error: Type '{ id: number; name: string; balance: number; dateOpened: any; closed: false; createdAt: any; updatedAt: any; }' is not assignable to type 'Account'.
  Type '{ id: number; name: string; balance: number; dateOpened: any; closed: false; createdAt: any; updatedAt: any; }' is missing the following properties from type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }': notes, deletedAt, cuid, slug 
      const accountsWithNulls: Account[] = [
        {
          id: 1,
          name: '',
          balance: 0,
          dateOpened: null as any,
          closed: false,
          createdAt: null as any,
          updatedAt: null as any,
        },
        ...mockAccounts

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:248:35
Error: Argument of type '(Account | undefined)[]' is not assignable to parameter of type 'Account[]'.
  Type 'Account | undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type 'Account'.
      Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      const singleAccount = [mockAccounts[0]];
      const sorted = sortAccounts(singleAccount, 'name', 'asc');
      expect(sorted).toEqual(singleAccount);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:249:30
Error: Argument of type '(Account | undefined)[]' is not assignable to parameter of type 'Account[]'.
  Type 'Account | undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type 'Account'.
      Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      const sorted = sortAccounts(singleAccount, 'name', 'asc');
      expect(sorted).toEqual(singleAccount);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:256:9
Error: Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type 'Account'.
  Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'.
    Property 'id' is optional in type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' but required in type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      const mixedCaseAccounts: Account[] = [
        { ...mockAccounts[0], name: 'apple Account' },
        { ...mockAccounts[1], name: 'Banana Account' },

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:257:9
Error: Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type 'Account'.
  Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'.
    Property 'id' is optional in type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' but required in type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
        { ...mockAccounts[0], name: 'apple Account' },
        { ...mockAccounts[1], name: 'Banana Account' },
        { ...mockAccounts[2], name: 'cherry Account' },

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting-logic.test.ts:258:9
Error: Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type 'Account'.
  Type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'.
    Property 'id' is optional in type '{ name: string; id?: number; notes?: string | null; createdAt?: string; updatedAt?: string; deletedAt?: string | null; cuid?: string | null; slug?: string; closed?: boolean | null; dateOpened?: string; transactions?: Transaction[]; balance?: number; }' but required in type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
        { ...mockAccounts[1], name: 'Banana Account' },
        { ...mockAccounts[2], name: 'cherry Account' },
      ];

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting.test.ts:191:29
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(closedAccounts.length).toBe(1);
      expect(sorted.indexOf(activeAccounts[0])).toBeLessThan(sorted.indexOf(closedAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting.test.ts:191:77
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(closedAccounts.length).toBe(1);
      expect(sorted.indexOf(activeAccounts[0])).toBeLessThan(sorted.indexOf(closedAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting.test.ts:203:29
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(activeAccounts.length).toBe(4);
      expect(sorted.indexOf(closedAccounts[0])).toBeLessThan(sorted.indexOf(activeAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting.test.ts:203:77
Error: Argument of type 'Account | undefined' is not assignable to parameter of type 'Account'.
  Type 'undefined' is not assignable to type 'Account'.
    Type 'undefined' is not assignable to type '{ id: number; name: string; notes: string | null; createdAt: string; updatedAt: string; deletedAt: string | null; cuid: string | null; slug: string; closed: boolean | null; dateOpened: string; }'. 
      expect(activeAccounts.length).toBe(4);
      expect(sorted.indexOf(closedAccounts[0])).toBeLessThan(sorted.indexOf(activeAccounts[0]));
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/accounts-sorting.test.ts:270:14
Error: Object is possibly 'undefined'. 
      expect(sortedClosed.length).toBe(1);
      expect(sortedClosed[0].name).toBe("Old Account");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:21:5
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
    updatedAt: '2023-01-01T10:00:00Z',
    transactions: [],
    account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:41:5
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
    updatedAt: '2023-02-01T12:00:00Z',
    transactions: [],
    account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:61:5
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
    updatedAt: '2023-01-15T14:30:00Z',
    transactions: [],
    account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:81:5
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
    updatedAt: '2023-03-01T16:45:00Z',
    transactions: [],
    account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:101:5
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
    updatedAt: '2023-04-01T11:20:00Z',
    transactions: [],
    account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:214:27
Error: Argument of type '(Schedule | undefined)[]' is not assignable to parameter of type 'Schedule[]'.
  Type 'Schedule | undefined' is not assignable to type 'Schedule'.
    Type 'undefined' is not assignable to type 'Schedule'.
      Type 'undefined' is not assignable to type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }'. 
      const newSchedules = [mockSchedules[0], mockSchedules[1]];
      schedulesState.init(newSchedules);
      expect(schedulesState.all).toHaveLength(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:307:14
Error: Object is possibly 'undefined'. 
      expect(inactiveSchedules).toHaveLength(1);
      expect(inactiveSchedules[0].name).toBe('Old Subscription');
      expect(inactiveSchedules[0].status).toBe('inactive');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:308:14
Error: Object is possibly 'undefined'. 
      expect(inactiveSchedules[0].name).toBe('Old Subscription');
      expect(inactiveSchedules[0].status).toBe('inactive');
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:345:9
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
        updatedAt: '2023-05-01T10:00:00Z',
        transactions: [],
        account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:359:13
Error: Type '{ name: string; amount: number; updatedAt: string; id?: number; createdAt?: string; slug?: string; accountId?: number; status?: "active" | "inactive" | null; payeeId?: number; amount_2?: number; amount_type?: "exact" | ... 1 more ... | "range"; recurring?: boolean | null; auto_add?: boolean | null; dateId?: number |...' is not assignable to type 'Schedule'.
  Type '{ name: string; amount: number; updatedAt: string; id?: number; createdAt?: string; slug?: string; accountId?: number; status?: "active" | "inactive" | null; payeeId?: number; amount_2?: number; amount_type?: "exact" | ... 1 more ... | "range"; recurring?: boolean | null; auto_add?: boolean | null; dateId?: number |...' is not assignable to type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }'.
    Property 'id' is optional in type '{ name: string; amount: number; updatedAt: string; id?: number; createdAt?: string; slug?: string; accountId?: number; status?: "active" | "inactive" | null; payeeId?: number; amount_2?: number; amount_type?: "exact" | ... 1 more ... | "range"; recurring?: boolean | null; auto_add?: boolean | null; dateId?: number |...' but required in type '{ id: number; name: string; createdAt: string; updatedAt: string; slug: string; accountId: number; status: "active" | "inactive" | null; payeeId: number; amount: number; amount_2: number; amount_type: "exact" | ... 1 more ... | "range"; recurring: boolean | null; auto_add: boolean | null; dateId: number | null; }'. 
    test('should update existing schedule', () => {
      const updatedSchedule: Schedule = {
        ...mockSchedules[0],

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:391:9
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
        updatedAt: '2023-05-01T10:00:00Z',
        transactions: [],
        account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:494:63
Error: Type 'boolean | null' is not assignable to type 'boolean'.
  Type 'null' is not assignable to type 'boolean'. 
    test('should handle recurring and non-recurring schedules', () => {
      const recurringSchedules = schedulesState.filterBy(s => s.recurring);
      const nonRecurringSchedules = schedulesState.filterBy(s => !s.recurring);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:499:14
Error: Object is possibly 'undefined'. 
      expect(nonRecurringSchedules).toHaveLength(1);
      expect(nonRecurringSchedules[0].name).toBe('One-time Payment');
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:503:61
Error: Type 'boolean | null' is not assignable to type 'boolean'.
  Type 'null' is not assignable to type 'boolean'. 
    test('should handle auto_add flags correctly', () => {
      const autoAddSchedules = schedulesState.filterBy(s => s.auto_add);
      const manualSchedules = schedulesState.filterBy(s => !s.auto_add);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/states/schedules-state.test.ts:545:9
Error: Object literal may only specify known properties, and 'transactions' does not exist in type 'Schedule'. 
        updatedAt: '2023-05-01T10:00:00Z',
        transactions: [],
        account: null,

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/trpc/schedules.test.ts:24:7
Error: Object literal may only specify known properties, and 'slug' does not exist in type '{ name: string | null; id?: number | undefined; notes?: string | null | undefined; dateCreated?: string | undefined; createdAt?: string | undefined; updatedAt?: string | undefined; deletedAt?: string | ... 1 more ... | undefined; }'. 
      name: "Test Schedule Payee",
      slug: "test-schedule-payee",
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/trpc/security/transactions.test.ts:72:11
Error: Type '"invalid-status"' is not assignable to type '"cleared" | "pending" | "scheduled" | null | undefined'. 
          date: "2024-01-01",
          status: "invalid-status",
        })

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/cache.test.ts:38:40
Error: Argument of type '"test-value"' is not assignable to parameter of type 'undefined'. 
      // Should exist immediately
      expect(queryCache.get(key)).toBe(value);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/cache.test.ts:243:49
Error: Argument of type 'string' is not assignable to parameter of type 'undefined'. 
      for (let i = 0; i < 100; i++) {
        expect(queryCache.get(`key-${i}`)).toBe(`value-${i}`);
      }

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:63:26
Error: Property 'curve' comes from an index signature, so it must be accessed with ['curve']. 
      
      expect(transformed.curve).toBe(curveMonotoneX);
      expect(transformed.strokeWidth).toBe(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:64:26
Error: Property 'strokeWidth' comes from an index signature, so it must be accessed with ['strokeWidth']. 
      expect(transformed.curve).toBe(curveMonotoneX);
      expect(transformed.strokeWidth).toBe(2);
      expect(transformed.fill).toBe('blue');

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:65:26
Error: Property 'fill' comes from an index signature, so it must be accessed with ['fill']. 
      expect(transformed.strokeWidth).toBe(2);
      expect(transformed.fill).toBe('blue');
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:76:26
Error: Property 'curve' comes from an index signature, so it must be accessed with ['curve']. 
      
      expect(transformed.curve).toBe(curveNatural);
      expect(transformed.strokeWidth).toBe(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:77:26
Error: Property 'strokeWidth' comes from an index signature, so it must be accessed with ['strokeWidth']. 
      expect(transformed.curve).toBe(curveNatural);
      expect(transformed.strokeWidth).toBe(2);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:99:26
Error: Property 'curve' comes from an index signature, so it must be accessed with ['curve']. 
      
      expect(transformed.curve).toBe(curveLinear);
      expect(transformed.strokeWidth).toBe(2);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:100:26
Error: Property 'strokeWidth' comes from an index signature, so it must be accessed with ['strokeWidth']. 
      expect(transformed.curve).toBe(curveLinear);
      expect(transformed.strokeWidth).toBe(2);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:106:24
Error: Property 'curveLinear' comes from an index signature, so it must be accessed with ['curveLinear']. 
    it('contains all expected curve functions', () => {
      expect(CURVE_MAP.curveLinear).toBe(curveLinear);
      expect(CURVE_MAP.curveMonotoneX).toBe(curveMonotoneX);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:107:24
Error: Property 'curveMonotoneX' comes from an index signature, so it must be accessed with ['curveMonotoneX']. 
      expect(CURVE_MAP.curveLinear).toBe(curveLinear);
      expect(CURVE_MAP.curveMonotoneX).toBe(curveMonotoneX);
      expect(CURVE_MAP.curveCardinal).toBe(curveCardinal);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:108:24
Error: Property 'curveCardinal' comes from an index signature, so it must be accessed with ['curveCardinal']. 
      expect(CURVE_MAP.curveMonotoneX).toBe(curveMonotoneX);
      expect(CURVE_MAP.curveCardinal).toBe(curveCardinal);
      expect(CURVE_MAP.curveCatmullRom).toBe(curveCatmullRom);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:109:24
Error: Property 'curveCatmullRom' comes from an index signature, so it must be accessed with ['curveCatmullRom']. 
      expect(CURVE_MAP.curveCardinal).toBe(curveCardinal);
      expect(CURVE_MAP.curveCatmullRom).toBe(curveCatmullRom);
      expect(CURVE_MAP.curveNatural).toBe(curveNatural);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:110:24
Error: Property 'curveNatural' comes from an index signature, so it must be accessed with ['curveNatural']. 
      expect(CURVE_MAP.curveCatmullRom).toBe(curveCatmullRom);
      expect(CURVE_MAP.curveNatural).toBe(curveNatural);
      expect(CURVE_MAP.curveBasis).toBe(curveBasis);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:111:24
Error: Property 'curveBasis' comes from an index signature, so it must be accessed with ['curveBasis']. 
      expect(CURVE_MAP.curveNatural).toBe(curveNatural);
      expect(CURVE_MAP.curveBasis).toBe(curveBasis);
      expect(CURVE_MAP.curveStep).toBe(curveStep);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/chart-curves.test.ts:112:24
Error: Property 'curveStep' comes from an index signature, so it must be accessed with ['curveStep']. 
      expect(CURVE_MAP.curveBasis).toBe(curveBasis);
      expect(CURVE_MAP.curveStep).toBe(curveStep);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:13:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(5);
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:14:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:15:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");
      expect(result[3].toString()).toBe("2024-04-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:16:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-15");
      expect(result[3].toString()).toBe("2024-04-15");
      expect(result[4].toString()).toBe("2024-05-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:17:14
Error: Object is possibly 'undefined'. 
      expect(result[3].toString()).toBe("2024-04-15");
      expect(result[4].toString()).toBe("2024-05-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:26:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(6);
      expect(result[0].toString()).toBe("2024-01-01");
      expect(result[1].toString()).toBe("2024-01-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:27:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-01");
      expect(result[1].toString()).toBe("2024-01-15");
      expect(result[2].toString()).toBe("2024-02-01");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:28:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-01-15");
      expect(result[2].toString()).toBe("2024-02-01");
      expect(result[3].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:29:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-02-01");
      expect(result[3].toString()).toBe("2024-02-15");
      expect(result[4].toString()).toBe("2024-03-01");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:30:14
Error: Object is possibly 'undefined'. 
      expect(result[3].toString()).toBe("2024-02-15");
      expect(result[4].toString()).toBe("2024-03-01");
      expect(result[5].toString()).toBe("2024-03-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:31:14
Error: Object is possibly 'undefined'. 
      expect(result[4].toString()).toBe("2024-03-01");
      expect(result[5].toString()).toBe("2024-03-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:40:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(6);
      expect(result[0].toString()).toBe("2024-01-10");
      expect(result[1].toString()).toBe("2024-03-10");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:41:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-10");
      expect(result[1].toString()).toBe("2024-03-10");
      expect(result[2].toString()).toBe("2024-05-10");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:42:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-03-10");
      expect(result[2].toString()).toBe("2024-05-10");
      expect(result[3].toString()).toBe("2024-07-10");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:43:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-05-10");
      expect(result[3].toString()).toBe("2024-07-10");
      expect(result[4].toString()).toBe("2024-09-10");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:44:14
Error: Object is possibly 'undefined'. 
      expect(result[3].toString()).toBe("2024-07-10");
      expect(result[4].toString()).toBe("2024-09-10");
      expect(result[5].toString()).toBe("2024-11-10");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:45:14
Error: Object is possibly 'undefined'. 
      expect(result[4].toString()).toBe("2024-09-10");
      expect(result[5].toString()).toBe("2024-11-10");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:55:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-30");
      expect(result[1].toString()).toBe("2024-02-29");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:56:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-30");
      expect(result[1].toString()).toBe("2024-02-29");
      expect(result[2].toString()).toBe("2024-03-30");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:57:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-29");
      expect(result[2].toString()).toBe("2024-03-30");
      expect(result[3].toString()).toBe("2024-04-30");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:58:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-30");
      expect(result[3].toString()).toBe("2024-04-30");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:67:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-29");
      expect(result[1].toString()).toBe("2024-02-29"); // Leap year allows Feb 29

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:68:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-29");
      expect(result[1].toString()).toBe("2024-02-29"); // Leap year allows Feb 29
      expect(result[2].toString()).toBe("2024-03-29");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:69:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-29"); // Leap year allows Feb 29
      expect(result[2].toString()).toBe("2024-03-29");
      expect(result[3].toString()).toBe("2024-04-29");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:70:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-29");
      expect(result[3].toString()).toBe("2024-04-29");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:81:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-01"); // Jan 1 is Monday
      expect(result[1].toString()).toBe("2024-02-05"); // First Monday of Feb

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:82:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-01"); // Jan 1 is Monday
      expect(result[1].toString()).toBe("2024-02-05"); // First Monday of Feb
      expect(result[2].toString()).toBe("2024-03-04"); // First Monday of Mar

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:83:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-05"); // First Monday of Feb
      expect(result[2].toString()).toBe("2024-03-04"); // First Monday of Mar
      expect(result[3].toString()).toBe("2024-04-01"); // First Monday of Apr

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:84:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-04"); // First Monday of Mar
      expect(result[3].toString()).toBe("2024-04-01"); // First Monday of Apr
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:93:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-09");
      expect(result[1].toString()).toBe("2024-02-13");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:94:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-09");
      expect(result[1].toString()).toBe("2024-02-13");
      expect(result[2].toString()).toBe("2024-03-12");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:95:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-13");
      expect(result[2].toString()).toBe("2024-03-12");
      expect(result[3].toString()).toBe("2024-04-09");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:96:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-12");
      expect(result[3].toString()).toBe("2024-04-09");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:105:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-26");
      expect(result[1].toString()).toBe("2024-02-23");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:106:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-26");
      expect(result[1].toString()).toBe("2024-02-23");
      expect(result[2].toString()).toBe("2024-03-29");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:107:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-23");
      expect(result[2].toString()).toBe("2024-03-29");
      expect(result[3].toString()).toBe("2024-04-26");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:108:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-29");
      expect(result[3].toString()).toBe("2024-04-26");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:119:14
Error: Object is possibly 'undefined'. 
      // January: 1st Mon (1st), 1st Wed (3rd), 3rd Mon (15th), 3rd Wed (17th)
      expect(result[0].toString()).toBe("2024-01-01");
      expect(result[1].toString()).toBe("2024-01-03");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:120:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-01");
      expect(result[1].toString()).toBe("2024-01-03");
      expect(result[2].toString()).toBe("2024-01-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:121:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-01-03");
      expect(result[2].toString()).toBe("2024-01-15");
      expect(result[3].toString()).toBe("2024-01-17");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:122:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-01-15");
      expect(result[3].toString()).toBe("2024-01-17");
      // February: 1st Mon (5th), 1st Wed (7th), 3rd Mon (19th), 3rd Wed (21st)

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:124:14
Error: Object is possibly 'undefined'. 
      // February: 1st Mon (5th), 1st Wed (7th), 3rd Mon (19th), 3rd Wed (21st)
      expect(result[4].toString()).toBe("2024-02-05");
      expect(result[5].toString()).toBe("2024-02-07");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:125:14
Error: Object is possibly 'undefined'. 
      expect(result[4].toString()).toBe("2024-02-05");
      expect(result[5].toString()).toBe("2024-02-07");
      expect(result[6].toString()).toBe("2024-02-19");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:126:14
Error: Object is possibly 'undefined'. 
      expect(result[5].toString()).toBe("2024-02-07");
      expect(result[6].toString()).toBe("2024-02-19");
      expect(result[7].toString()).toBe("2024-02-21");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:127:14
Error: Object is possibly 'undefined'. 
      expect(result[6].toString()).toBe("2024-02-19");
      expect(result[7].toString()).toBe("2024-02-21");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:136:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-11"); // 2nd Thursday of Jan
      expect(result[1].toString()).toBe("2024-04-11"); // 2nd Thursday of Apr

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:137:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-11"); // 2nd Thursday of Jan
      expect(result[1].toString()).toBe("2024-04-11"); // 2nd Thursday of Apr
      expect(result[2].toString()).toBe("2024-07-11"); // 2nd Thursday of Jul

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:138:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-04-11"); // 2nd Thursday of Apr
      expect(result[2].toString()).toBe("2024-07-11"); // 2nd Thursday of Jul
      expect(result[3].toString()).toBe("2024-10-10"); // 2nd Thursday of Oct

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:139:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-07-11"); // 2nd Thursday of Jul
      expect(result[3].toString()).toBe("2024-10-10"); // 2nd Thursday of Oct
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:150:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(1);
      expect(result[0].toString()).toBe("2024-02-24");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:161:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(1);
      expect(result[0].toString()).toBe("2024-02-26"); // Last Monday of Feb 2024
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:172:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:173:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:174:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");
      expect(result[3].toString()).toBe("2024-04-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:175:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-15");
      expect(result[3].toString()).toBe("2024-04-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:185:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-01-31");
      expect(result[1].toString()).toBe("2024-02-29");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:186:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-31");
      expect(result[1].toString()).toBe("2024-02-29");
      expect(result[2].toString()).toBe("2024-03-31");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:187:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-29");
      expect(result[2].toString()).toBe("2024-03-31");
      expect(result[3].toString()).toBe("2024-04-30");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:188:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-03-31");
      expect(result[3].toString()).toBe("2024-04-30");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:200:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(2);
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:201:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:211:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(3);
      expect(result[0].toString()).toBe("2024-02-15");
      expect(result[1].toString()).toBe("2024-03-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:212:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-02-15");
      expect(result[1].toString()).toBe("2024-03-15");
      expect(result[2].toString()).toBe("2024-04-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:213:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-03-15");
      expect(result[2].toString()).toBe("2024-04-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:224:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(3);
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:225:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:226:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-02-15");
      expect(result[2].toString()).toBe("2024-03-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:253:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(2);
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-01-25");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:254:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-15");
      expect(result[1].toString()).toBe("2024-01-25");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:263:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(4);
      expect(result[0].toString()).toBe("2024-11-15");
      expect(result[1].toString()).toBe("2024-12-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:264:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-11-15");
      expect(result[1].toString()).toBe("2024-12-15");
      expect(result[2].toString()).toBe("2025-01-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:265:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-12-15");
      expect(result[2].toString()).toBe("2025-01-15");
      expect(result[3].toString()).toBe("2025-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:266:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2025-01-15");
      expect(result[3].toString()).toBe("2025-02-15");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:276:14
Error: Object is possibly 'undefined'. 
      expect(result).toHaveLength(6);
      expect(result[0].toString()).toBe("2024-01-05");
      expect(result[1].toString()).toBe("2024-01-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:277:14
Error: Object is possibly 'undefined'. 
      expect(result[0].toString()).toBe("2024-01-05");
      expect(result[1].toString()).toBe("2024-01-15");
      expect(result[2].toString()).toBe("2024-01-25");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:278:14
Error: Object is possibly 'undefined'. 
      expect(result[1].toString()).toBe("2024-01-15");
      expect(result[2].toString()).toBe("2024-01-25");
      expect(result[3].toString()).toBe("2024-02-05");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:279:14
Error: Object is possibly 'undefined'. 
      expect(result[2].toString()).toBe("2024-01-25");
      expect(result[3].toString()).toBe("2024-02-05");
      expect(result[4].toString()).toBe("2024-02-15");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:280:14
Error: Object is possibly 'undefined'. 
      expect(result[3].toString()).toBe("2024-02-05");
      expect(result[4].toString()).toBe("2024-02-15");
      expect(result[5].toString()).toBe("2024-02-25");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/date-frequency.test.ts:281:14
Error: Object is possibly 'undefined'. 
      expect(result[4].toString()).toBe("2024-02-15");
      expect(result[5].toString()).toBe("2024-02-25");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:343:14
Error: Object is possibly 'undefined'. 
      // January 1, 2024 is Monday, so: Sunday (0) = Jan 7, Monday (1) = Jan 1, Tuesday (2) = Jan 2, etc.
      expect(results[0].day).toBe(7); // First Sunday
      expect(results[1].day).toBe(1); // First Monday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:344:14
Error: Object is possibly 'undefined'. 
      expect(results[0].day).toBe(7); // First Sunday
      expect(results[1].day).toBe(1); // First Monday
      expect(results[2].day).toBe(2); // First Tuesday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:345:14
Error: Object is possibly 'undefined'. 
      expect(results[1].day).toBe(1); // First Monday
      expect(results[2].day).toBe(2); // First Tuesday
      expect(results[3].day).toBe(3); // First Wednesday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:346:14
Error: Object is possibly 'undefined'. 
      expect(results[2].day).toBe(2); // First Tuesday
      expect(results[3].day).toBe(3); // First Wednesday
      expect(results[4].day).toBe(4); // First Thursday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:347:14
Error: Object is possibly 'undefined'. 
      expect(results[3].day).toBe(3); // First Wednesday
      expect(results[4].day).toBe(4); // First Thursday
      expect(results[5].day).toBe(5); // First Friday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:348:14
Error: Object is possibly 'undefined'. 
      expect(results[4].day).toBe(4); // First Thursday
      expect(results[5].day).toBe(5); // First Friday
      expect(results[6].day).toBe(6); // First Saturday

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/dates.test.ts:349:14
Error: Object is possibly 'undefined'. 
      expect(results[5].day).toBe(5); // First Friday
      expect(results[6].day).toBe(6); // First Saturday
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:22:14
Error: Object is possibly 'undefined'. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].name).toBe(metricName);
      expect(metrics[0].value).toBe(metricValue);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:23:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].name).toBe(metricName);
      expect(metrics[0].value).toBe(metricValue);
      expect(metrics[0].timestamp).toBeGreaterThan(0);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:24:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].value).toBe(metricValue);
      expect(metrics[0].timestamp).toBeGreaterThan(0);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:45:14
Error: Object is possibly 'undefined'. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].value).toBe(duration);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:61:14
Error: Object is possibly 'undefined'. 
      const metrics = perfMonitor.getMetrics(metricName);
      expect(metrics[0].tags).toEqual(tags);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:129:14
Error: Object is possibly 'undefined'. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.type).toBe("database");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:130:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.type).toBe("database");
      expect(metrics[0].tags?.query).toBe(queryName);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:130:31
Error: Property 'type' comes from an index signature, so it must be accessed with ['type']. 
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.type).toBe("database");
      expect(metrics[0].tags?.query).toBe(queryName);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:131:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].tags?.type).toBe("database");
      expect(metrics[0].tags?.query).toBe(queryName);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:131:31
Error: Property 'query' comes from an index signature, so it must be accessed with ['query']. 
      expect(metrics[0].tags?.type).toBe("database");
      expect(metrics[0].tags?.query).toBe(queryName);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:148:14
Error: Object is possibly 'undefined'. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.error).toBe("true");

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:149:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.error).toBe("true");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:149:31
Error: Property 'error' comes from an index signature, so it must be accessed with ['error']. 
      expect(metrics[0].value).toBeGreaterThan(0);
      expect(metrics[0].tags?.error).toBe("true");
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:175:14
Error: Object is possibly 'undefined'. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].tags?.type).toBe("render");
      expect(metrics[0].tags?.component).toBe(componentName);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:175:31
Error: Property 'type' comes from an index signature, so it must be accessed with ['type']. 
      expect(metrics).toHaveLength(1);
      expect(metrics[0].tags?.type).toBe("render");
      expect(metrics[0].tags?.component).toBe(componentName);

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:176:14
Error: Object is possibly 'undefined'. 
      expect(metrics[0].tags?.type).toBe("render");
      expect(metrics[0].tags?.component).toBe(componentName);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:176:31
Error: Property 'component' comes from an index signature, so it must be accessed with ['component']. 
      expect(metrics[0].tags?.type).toBe("render");
      expect(metrics[0].tags?.component).toBe(componentName);
    });

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:287:14
Error: Object is possibly 'undefined'. 
      // Should get the most recent 10 metrics
      expect(limitedMetrics[0].value).toBe(40); // Most recent
      expect(limitedMetrics[9].value).toBe(49); // Oldest of the 10

/Users/robert/Projects/JS/SvelteKit/budget/apps/budget/tests/unit/utils/performance.test.ts:288:14
Error: Object is possibly 'undefined'. 
      expect(limitedMetrics[0].value).toBe(40); // Most recent
      expect(limitedMetrics[9].value).toBe(49); // Oldest of the 10
    });

====================================
svelte-check found 611 errors and 0 warnings in 107 files
error: script "check" exited with code 1
